#include "inc/mons.h"
#include "inc/def.h"
#include "inc/flag.h"
#include "inc/se.h"
#include "inc/scr_inc.h"
#include "inc/3dicon.h"
#include "inc/skilldef.h"
#include "inc/vo.h"
#include "inc/music.h"
#include "inc/efx.h"

//----------------------------------------------------------------------------//
//                                                                            //
// 大僧院②                                                                   //
//                                                                            //
//----------------------------------------------------------------------------//
///////////////////////////////////////////////////////////////////////////////
// 初期化スクリプト
///////////////////////////////////////////////////////////////////////////////
//-------------------------------------------


function "init"
{
	
	if(FLAG[GF_MP642x_SWITCH_01] ){
		//３重扉の１
		MapAnime( "switch1" , "wait2" )
		MapAnime( "door1" , "wait2" )
	//	SetChrWork("lookp01", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに
	} else {
		MapAnime( "switch1" , "wait1" )
		MapAnime( "door1" , "wait1" )
	}
	if(FLAG[GF_MP642x_SWITCH_02] ){
		//３重扉の２
		MapAnime( "switch2" , "wait2" )
		MapAnime( "door2" , "wait2" )
	//	SetChrWork("lookp02", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに
	} else {
		MapAnime( "switch2" , "wait1" )
		MapAnime( "door2" , "wait1" )
	}
	if(FLAG[GF_MP642x_SWITCH_03] ){
		//３重扉の３
		MapAnime( "switch3" , "wait2" )
		MapAnime( "door3" , "wait2" )
		SetChrWork("lookp03", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに
	} else {
		MapAnime( "switch3" , "wait1" )
		MapAnime( "door3" , "wait1" )
	}

	if(FLAG[GF_MP6422_SWITCH_00] ){
		//ショートカット１を開通状態に
		MapAnime( "switch0" , "wait2" )
		MapAnime( "door0" , "wait2" )
		SetChrWork("lookp00", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに
	} else {
		MapAnime( "switch0" , "wait1" )
		MapAnime( "door0" , "wait1" )
	}
	if(FLAG[GF_MP6422_SWITCH_01] ){
		//ショートカット２を開通状態に
		MapAnime( "switch4" , "wait2" )
		MapAnime( "door4" , "wait2" )
		SetChrWork("lookp04", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに
	} else {
		MapAnime( "switch4" , "wait1" )
		MapAnime( "door4" , "wait1" )
	}

	//マップ名表示
	if(!FLAG[SF_LOADINIT] && !FLAG[GF_MPxxxx_MAP_NAME_NO_DRAW] && !FLAG[TF_MAPNAME_SHOWN]){
		if( FLAG[SF_LASTENTRY_NO] == 0 || FLAG[SF_LASTENTRY_NO] == 100 ){
			VisualName("visual/mapname/mn_6421.itp",VN_NAMEMAP2,-1,-1,VN_MAPNAME_TIME)//ボラド大僧院
			SetFlag( TF_MAPNAME_SHOWN, 1 )				// 地名表示した（テンポラリ）
		}
	}

//	//ダミー宝箱
//	if( FLAG[GF_MP6421_TBOX01] ){
//		ChangeAnimation( "TBOX06" , "ANI_STOP2", -1 , 1 )		//取った後
//	}
//	if( FLAG[GF_MP6421_TBOX02] ){
//		ChangeAnimation( "TBOX07" , "ANI_STOP2", -1 , 1 )		//取った後
//	}
//	if( FLAG[GF_MP6421_TBOX03] ){
//		ChangeAnimation( "TBOX08" , "ANI_STOP2", -1 , 1 )		//取った後
//	}
}

//-------------------------------------------
// スイッチ 03
function "shortcut03"
{
	SetFlag(SF_ALLMUTEKI,1)		//無敵ＯＮ
	SetStopFlag(STOPFLAG_PC)
	SetStopFlag(STOPFLAG_EVENT)
	SaveCamera()

	// マップのアニメ設定
	SetFlag(GF_MP642x_SWITCH_03,1)		// mp6422
	EventAreaEnable("lookp03",0)
	SetChrWork("lookp03", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに
	MapAnime( "switch3" , "open" )
	PlaySE(SE_GIM_SW_3, 100, 0,  0, 0, 1.0f, 0)	// gimse レバー
	Wait(60)

	FadeOut(FADE_BLACK,FADE_NORMAL)
	WaitFade()

	//一階の環境に合わせる
//	SetFog( FOG_LOWER, #141414, 20.0f, 80.0f, 1.0f, 0.0f, 0.8f,-5.0f, 0.25f, 0)
//	SetFogBack( FOG_LOWER, #5a6e9e, 30.0f, 800.0f, 5.0f, 0.0f, 1.0f,0.0f, 0.25f, 0)
	SetMapLightColor( 0, 0.92f, 0.94f, 1.06f, 0.65f )
	//SetGradationColor( 0, 0.25f,0.2f, 0.15f, 2.0f, 0.1f, 0.3f, 0.2f, 0.2f ,0.0f)
//	SetFlag(SF_DARKAREA,0)

	PointLightEnable("room", 0, 1)

	MoveCameraAt( 0 , 0.085f , 30.943f , 3.896f , 0 )	// 注視点
	ChangeCameraDistance( 0 , 12.900f , 0 )		// 基本距離
	ChangeCameraElevation( 0 , 1.936f , 0 )	// 基本仰角
	RotateCamera( 0 , 359.555f , 0 )				// 角度
	ChangeCameraPers( 0 , 55.000f , 0 )			// 視野角
	SetCameraZPlane( 0.100f , 300.000f )			// ZPlane
	RollCamera( 0 , 0.0f , 0 )				// ロール回転
	// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

	Wait(30)
	FadeIn(FADE_BLACK,FADE_NORMAL)
	WaitFade()

	PlaySE(SE_GIM_DOOR_CHAIN, 100, 1,  0, 0, 1.0f, 0)	// 動く音 loop
	MapAnime( "door3" , "open" )
	Wait(60)
	StopSE(SE_GIM_DOOR_CHAIN,1000)	// stop loop
	PlaySE(SE_GIM_DOOR_CHAIN_STOP, 100, 0,  0, 0, 1.0f, 0)	// 停止音
	EarthQuake(0.1f,0.1f,10)
	Wait(30)

	FadeOut(FADE_BLACK,FADE_NORMAL)
	WaitFade()

	//ポイントライトOFF
	PointLightEnable("room", 0, 0)

	//マップパラメーターリセット
	ResetMapParam(-1)

	SetMapLightColor( 0,0.9f,0.94f,1.3f,0.1f )

//	SetFlag(SF_DARKAREA,1)

	RestoreCamera(0,0)
	Wait(30)
	FadeIn(FADE_BLACK,FADE_NORMAL)
	WaitFade()

	SetFlag(SF_ALLMUTEKI,0)		//無敵ＯＦＦ
	ResetStopFlag(STOPFLAG_PC)
	ResetStopFlag(STOPFLAG_EVENT)
}

//-------------------------------------------
// スイッチ 00
function "shortcut00"
{
	SetFlag(SF_ALLMUTEKI,1)		//無敵ＯＮ
	SetStopFlag(STOPFLAG_PC)
	SetStopFlag(STOPFLAG_EVENT)
	SaveCamera()

	// マップのアニメ設定
	SetFlag(GF_MP6422_SWITCH_00,1)		// mp6422 ショートカット
	EventAreaEnable("lookp00",0)
	SetChrWork("lookp00", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに
	MapAnime( "switch0" , "open" )
	PlaySE(SE_GIM_SW_3, 100, 0,  0, 0, 1.0f, 0)	// gimse レバー
	Wait(60)

	PlaySE(SE_GIM_DOOR_CHAIN, 100, 1,  0, 0, 1.0f, 0)	// 動く音 loop
	MapAnime( "door0" , "open" )
	Wait(60)
	StopSE(SE_GIM_DOOR_CHAIN,1000)	// stop loop
	PlaySE(SE_GIM_DOOR_CHAIN_STOP, 100, 0,  0, 0, 1.0f, 0)	// 停止音
	EarthQuake(0.1f,0.1f,10)
	Wait(30)

	SetFlag(SF_ALLMUTEKI,0)		//無敵ＯＦＦ
	ResetStopFlag(STOPFLAG_PC)
	ResetStopFlag(STOPFLAG_EVENT)
}

//-------------------------------------------
// スイッチ 04
function "shortcut04"
{
	SetFlag(SF_ALLMUTEKI,1)		//無敵ＯＮ
	SetStopFlag(STOPFLAG_PC)
	SetStopFlag(STOPFLAG_EVENT)
	SaveCamera()

	// マップのアニメ設定
	SetFlag(GF_MP6422_SWITCH_01,1)		// mp6422 ショートカット
	EventAreaEnable("lookp04",0)
	SetChrWork("lookp04", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに
	MapAnime( "switch4" , "open" )
	PlaySE(SE_GIM_SW_3, 100, 0,  0, 0, 1.0f, 0)	// gimse レバー
	Wait(60)

	PlaySE(SE_GIM_DOOR_CHAIN, 100, 1,  0, 0, 1.0f, 0)	// 動く音 loop
	MapAnime( "door4" , "open" )
	Wait(60)
	StopSE(SE_GIM_DOOR_CHAIN,1000)	// stop loop
	PlaySE(SE_GIM_DOOR_CHAIN_STOP, 100, 0,  0, 0, 1.0f, 0)	// 停止音
	EarthQuake(0.1f,0.1f,10)
	Wait(30)

	SetFlag(SF_ALLMUTEKI,0)		//無敵ＯＦＦ
	ResetStopFlag(STOPFLAG_PC)
	ResetStopFlag(STOPFLAG_EVENT)
}






////////////////////////////////////////////////////////////////////////////////

//■メインイベントセクション

////////////////////////////////////////////////////////////////////////////////
