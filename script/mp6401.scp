#include "inc/mons.h"
#include "inc/def.h"
#include "inc/flag.h"
#include "inc/se.h"
#include "inc/scr_inc.h"
#include "inc/3dicon.h"
#include "inc/skilldef.h"
#include "inc/vo.h"
#include "inc/music.h"
#include "inc/efx.h"

//----------------------------------------------------------------------------//
//                                                                            //
// 寺院ボス						                                              //
//                                                                            //
//----------------------------------------------------------------------------//
///////////////////////////////////////////////////////////////////////////////
// 初期化スクリプト
///////////////////////////////////////////////////////////////////////////////

//-------------------------------------------
// init
function "init"
{
	
	if( FLAG[SF_EVENT_ON] )
	{

		// クエスト制御
		// 【QS610】親友の遺言（ダーナ）	▽中央書架の棚を調べる（×４）
		if( FLAG[GF_QUEST_610] == QUEST_START )	// 【QS610】親友の遺言（ダーナ）	クエストを開始した
		{
			SetChrPos("LP_QS_610_Look_B1", -1.52f, -5.48f, 8.52f)
			SetChrWork( "LP_QS_610_Look_B1" , CWK_CHECKRADIUS , 2.5f )		// 範囲
			SetChrPos("LP_QS_610_Look_B2", -1.55f, -26.65f, 8.52f)
			SetChrWork( "LP_QS_610_Look_B2" , CWK_CHECKRADIUS , 2.5f )		// 範囲
			SetChrPos("LP_QS_610_Look_B3", -14.52f, -26.49f, 8.52f)
			SetChrWork( "LP_QS_610_Look_B3" , CWK_CHECKRADIUS , 2.5f )		// 範囲
			SetChrPos("LP_QS_610_Look_B4", -14.44f, -5.41f, 8.52f)
			SetChrWork( "LP_QS_610_Look_B4" , CWK_CHECKRADIUS , 2.5f )		// 範囲
			
			if( !FLAG[GF_QS610_LOOK_DESK] )			//【QS610】▼中央書架の机を調べる を見た
			{
				SetChrPos("LP_QS_610_Look_Desk", -13.49f,-10.04f,8.04f)
				SetChrWork( "LP_QS_610_Look_Desk" , CWK_CHECKRADIUS , 2.0f )	// 範囲
			}
		}

	}

	//扉１
	if(FLAG[GF_MP6401_SWITCH_01R]){
		MapAnime( "switch_eff1_1" , "switch_on" )
		SetChrWork("lp_sw01_r", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに

		MapAnime( "eff1_1" , "switch_on" )

	} else {
		MapAnime( "switch_eff1_1" , "switch_off" )
	}
	if(FLAG[GF_MP6401_SWITCH_01L]){
		MapAnime( "switch_eff1_2" , "switch_on" )
		SetChrWork("lp_sw01_l", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに

		MapAnime( "eff1_2" , "switch_on" )

	} else {
		MapAnime( "switch_eff1_2" , "switch_off" )
	}
	if(FLAG[GF_MP6401_SWITCH_01R] && FLAG[GF_MP6401_SWITCH_01L] ){
		MapAnime( "force_door1" , "anime_stop2" )
		MapHide( "line_l1", 1)
		MapHide( "line_r1", 1)
	} else {
		MapAnime( "force_door1" , "anime_stop" )
		MapHide( "line_l1", 0)
		MapHide( "line_r1", 0)
	}

	//扉２
	if (!FLAG[GF_04MP6402_CHECK_GIM]) {		// ▽[M04S220][扉の開閉装置を操作する]
		MapAnime( "switch_eff2" , "switch_off" )
		SetChrWork("lp_sw02", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに
		SetChrWork("lp_sw02ev", CWK_CHECKOFF, 0)		// イベント用ルックポイント オン
	} else {
		SetChrWork("lp_sw02ev", CWK_CHECKOFF, 1)		// イベント用ルックポイントをオフ
		
		if(FLAG[GF_MP6401_SWITCH_02]){
			MapAnime( "switch_eff2" , "switch_on" )
			SetChrWork("lp_sw02", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに
		} else {
			MapAnime( "switch_eff2" , "switch_off" )
		}
	}
	if(FLAG[GF_MP6401_SWITCH_02]){
		MapAnime( "force_door2" , "anime_stop2" )
		MapHide( "line_l2", 1)
		MapHide( "line_r2", 1)
	} else {
		MapAnime( "force_door2" , "anime_stop" )
		MapHide( "line_l2", 0)
		MapHide( "line_r2", 0)
	}

	//扉３
	if(FLAG[GF_MP6401_SWITCH_03]){
		MapAnime( "leber_obj" , "on" )
		SetChrWork("lp_sw03", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに
	} else {
		MapAnime( "leber_obj" , "off" )
	}
	if(FLAG[GF_MP6401_SWITCH_03]){
		MapAnime( "center_door" , "open1" )
	} else {
		MapAnime( "center_door" , "close" )
	}

	//マップ名表示
	if(!FLAG[SF_LOADINIT] && !FLAG[GF_MPxxxx_MAP_NAME_NO_DRAW] && !FLAG[TF_MAPNAME_SHOWN]){
		if( FLAG[SF_LASTENTRY_NO] == 0 || FLAG[SF_LASTENTRY_NO] == 100  ){	
			//ダンジョン側／ワープ
			VisualName("visual/mapname/mn_6401.itp",VN_NAMEMAP2,-1,-1,VN_MAPNAME_TIME)	//大樹の寺院
			SetFlag( TF_MAPNAME_SHOWN, 1 )				// 地名表示した（テンポラリ）
		}
	}
}


//-------------------------------------------
// スイッチ 01R
function "switch_01r"
{
	SetFlag(SF_ALLMUTEKI,1)		//無敵ＯＮ
	SetStopFlag(STOPFLAG_PC)
	SetStopFlag(STOPFLAG_EVENT)
	SaveCamera()
	SetChrWork("lp_sw01_r", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに

	SetFlag( GF_MP6401_SWITCH_01R, 1)	//  mp6401理力扉２階右スイッチ

	PlaySE(SE_GIM_SW_4, 100, 0,  0, 0, 1.0f, 0)	// gimse
	MapAnime( "switch_eff1_1" , "switch_on_ani" )
	Wait(10)
	MapAnime( "switch_eff1_1" , "switch_on" )
	Wait(30)

	CrossFade(FADE_NORMAL)
	MoveCameraAt( 0 , -8.516f , 35.588f , 10.635f , 0 )	// 注視点
	ChangeCameraDistance( 0 , 7.000f , 0 )		// 基本距離
	ChangeCameraElevation( 0 , 23.232f , 0 )	// 基本仰角
	RotateCamera( 0 , 357.836f , 0 )				// 角度
	ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
	SetCameraZPlane( 0.500f , 900.000f )			// ZPlane
	RollCamera( 0 , 0.0f , 0 )				// ロール回転
	// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。
	Wait(30)

	PlaySE(SE_GIM_DOOR_LIGHT_2, 60, 0,  0, 100, 1.0f, 0)	// 丸いのが光る
	MapAnime( "eff1_1" , "switch_on_ani" )
	Wait(10)
	MapAnime( "eff1_1" , "switch_on" )
	Wait(30)

	CallFunc("mp6401:door_01")	// 扉の開閉制御

	SetFlag(SF_ALLMUTEKI,0)		//無敵ＯＦＦ
	ResetStopFlag(STOPFLAG_PC)
	ResetStopFlag(STOPFLAG_EVENT)
}


//-------------------------------------------
// スイッチ 01L
function "switch_01l"
{
	SetFlag(SF_ALLMUTEKI,1)		//無敵ＯＮ
	SetStopFlag(STOPFLAG_PC)
	SetStopFlag(STOPFLAG_EVENT)
	SaveCamera()
	SetChrWork("lp_sw01_l", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに

	SetFlag( GF_MP6401_SWITCH_01L, 1)	//  mp6401理力扉２階左スイッチ

	PlaySE(SE_GIM_SW_4, 100, 0,  0, 0, 1.0f, 0)	// gimse
	MapAnime( "switch_eff1_2" , "switch_on_ani" )
	Wait(10)
	MapAnime( "switch_eff1_2" , "switch_on" )
	Wait(30)

	CrossFade(FADE_NORMAL)
	MoveCameraAt( 0 , -8.516f , 35.588f , 10.635f , 0 )	// 注視点
	ChangeCameraDistance( 0 , 7.000f , 0 )		// 基本距離
	ChangeCameraElevation( 0 , 23.232f , 0 )	// 基本仰角
	RotateCamera( 0 , 357.836f , 0 )				// 角度
	ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
	SetCameraZPlane( 0.500f , 900.000f )			// ZPlane
	RollCamera( 0 , 0.0f , 0 )				// ロール回転
	// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。
	Wait(30)

	PlaySE(SE_GIM_DOOR_LIGHT_2, 60, 0,  0, 100, 1.0f, 0)	// 丸いのが光る
	MapAnime( "eff1_2" , "switch_on_ani" )
	Wait(10)
	MapAnime( "eff1_2" , "switch_on" )
	Wait(30)

	CallFunc("mp6401:door_01")	// 扉の開閉制御

	SetFlag(SF_ALLMUTEKI,0)		//無敵ＯＦＦ
	ResetStopFlag(STOPFLAG_PC)
	ResetStopFlag(STOPFLAG_EVENT)
}

//-------------------------------------------
// 扉の開閉 01
function "door_01"
{

	if(FLAG[GF_MP6401_SWITCH_01R] && FLAG[GF_MP6401_SWITCH_01L] ){

		FadeOut(FADE_BLACK,FADE_NORMAL)
		WaitFade()

		MoveCameraAt( 0 , -8.253f , 22.442f , 2.327f , 0 )	// 注視点
		ChangeCameraDistance( 0 , 4.014f , 0 )		// 基本距離
		ChangeCameraElevation( 0 , -15.708f , 0 )	// 基本仰角
		RotateCamera( 0 , 359.338f , 0 )				// 角度
		ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
		SetCameraZPlane( 0.500f , 900.000f )			// ZPlane
		RollCamera( 0 , 0.0f , 0 )				// ロール回転
		// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

//		MoveCameraAt( 0 , -8.002f , 29.933f , 6.965f , 0 )	// 注視点
//		ChangeCameraDistance( 0 , 25.800f , 0 )		// 基本距離
//		ChangeCameraElevation( 0 , 25.666f , 0 )	// 基本仰角
//		RotateCamera( 0 , 359.934f , 0 )				// 角度
//		ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
//		SetCameraZPlane( 0.500f , 900.000f )			// ZPlane
//		RollCamera( 0 , 0.0f , 0 )				// ロール回転
//		// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

		Wait(30)

		FadeIn(FADE_BLACK,FADE_NORMAL)
		WaitFade()

		Wait(10)
		PlaySE(SE_GIM_DOOR_LIGHT, 60, 0,  0, 100, 1.0f, 0)	// 光る
		MapHide( "line_l1", 1)
		MapHide( "line_r1", 1)
		Wait(30)

		PlaySE(SE_GIM_DOOR_ROCK, 100, 1,  0, 0, 1.0f, 0)	// 動く音 loop
		MapAnime( "force_door1" , "open" )
		Wait(60)
		StopSE(SE_GIM_DOOR_ROCK,1000)	// stop loop
		PlaySE(SE_GIM_DOOR_ROCK_STOP, 100, 0,  0, 0, 1.0f, 0)	// 停止音
		EarthQuake(0.1f,0.1f,10)

		Wait(30)

		FadeOut(FADE_BLACK,FADE_NORMAL)
		WaitFade()
		RestoreCamera(0,0)
		Wait(30)
		FadeIn(FADE_BLACK,FADE_NORMAL)
		WaitFade()
	} else {
		CrossFade(FADE_NORMAL)
		RestoreCamera(0,0)
		Wait(30)
	}

}

//-------------------------------------------
// スイッチ 02
function "switch_02"
{
	SetFlag(SF_ALLMUTEKI,1)		//無敵ＯＮ
	SetStopFlag(STOPFLAG_PC)
	SetStopFlag(STOPFLAG_EVENT)
	SaveCamera()
	SetChrWork("lp_sw02", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに

	SetFlag( GF_MP6401_SWITCH_02, 1)	//  mp6401理力扉１階スイッチ

	PlaySE(SE_GIM_SW_4, 100, 0,  0, 0, 1.0f, 0)	// gimse
	MapAnime( "switch_eff2" , "switch_on_ani" )
	Wait(10)
	MapAnime( "switch_eff2" , "switch_on" )
	Wait(30)

	CallFunc("mp6401:door_02")	// 扉の開閉制御

	SetFlag(SF_ALLMUTEKI,0)		//無敵ＯＦＦ
	ResetStopFlag(STOPFLAG_PC)
	ResetStopFlag(STOPFLAG_EVENT)
}

//-------------------------------------------
// 扉の開閉 02
function "door_02"
{

	if(FLAG[GF_MP6401_SWITCH_02]){

		FadeOut(FADE_BLACK,FADE_NORMAL)
		WaitFade()

		MoveCameraAt( 0 , 44.090f , -7.389f , 1.871f , 0 )	// 注視点
		ChangeCameraDistance( 0 , 21.200f , 0 )		// 基本距離
		ChangeCameraElevation( 0 , 15.535f , 0 )	// 基本仰角
		RotateCamera( 0 , 359.598f , 0 )				// 角度
		ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
		SetCameraZPlane( 0.500f , 900.000f )			// ZPlane
		RollCamera( 0 , 0.0f , 0 )				// ロール回転
		// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

		Wait(30)

		FadeIn(FADE_BLACK,FADE_NORMAL)
		WaitFade()

		Wait(10)
		PlaySE(SE_GIM_DOOR_LIGHT, 60, 0,  0, 100, 1.0f, 0)	// 光る
		MapHide( "line_l2", 1)
		MapHide( "line_r2", 1)
		Wait(30)

		PlaySE(SE_GIM_DOOR_ROCK, 100, 1,  0, 0, 1.0f, 0)	// 動く音 loop
		MapAnime( "force_door2" , "open" )
		Wait(60)
		StopSE(SE_GIM_DOOR_ROCK,1000)	// stop loop
		PlaySE(SE_GIM_DOOR_ROCK_STOP, 100, 0,  0, 0, 1.0f, 0)	// 停止音
		EarthQuake(0.1f,0.1f,10)

		Wait(30)

		FadeOut(FADE_BLACK,FADE_NORMAL)
		WaitFade()
		RestoreCamera(0,0)
		Wait(30)
		FadeIn(FADE_BLACK,FADE_NORMAL)
		WaitFade()

	}
}


//-------------------------------------------
// スイッチ 03
function "switch_03"
{
	SetFlag(SF_ALLMUTEKI,1)		//無敵ＯＮ
	SetStopFlag(STOPFLAG_PC)
	SetStopFlag(STOPFLAG_EVENT)
	SaveCamera()
	SetChrWork("lp_sw03", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに

	SetFlag( GF_MP6401_SWITCH_03, 1)	// mp6401扉用レバー

	PlaySE("SE_GIM_SW_3", 100, 0,  0, 0, 1.0f, 0)	//gimse レバー
	MapAnime( "leber_obj" , "on_ani" )
	Wait(30)
	MapAnime( "leber_obj" , "on" )
	Wait(30)

	CallFunc("mp6401:door_03")	// 扉の開閉制御

	SetFlag(SF_ALLMUTEKI,0)		//無敵ＯＦＦ
	ResetStopFlag(STOPFLAG_PC)
	ResetStopFlag(STOPFLAG_EVENT)
}

//-------------------------------------------
// 扉の開閉 03
function "door_03"
{

	if(FLAG[GF_MP6401_SWITCH_03]){

		FadeOut(FADE_BLACK,FADE_NORMAL)
		WaitFade()

		MoveCameraAt( 0 , -8.144f , -32.428f , 9.892f , 0 )	// 注視点
		ChangeCameraDistance( 0 , 12.900f , 0 )		// 基本距離
		ChangeCameraElevation( 0 , 20.887f , 0 )	// 基本仰角
		RotateCamera( 0 , 159.247f , 0 )				// 角度
		ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
		SetCameraZPlane( 0.500f , 900.000f )			// ZPlane
		RollCamera( 0 , 0.0f , 0 )				// ロール回転
		// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

		Wait(30)

		FadeIn(FADE_BLACK,FADE_NORMAL)
		WaitFade()

		Wait(10)

		PlaySE(SE_GIM_DOOR_ROCK, 100, 1,  0, 0, 1.0f, 0)	// 動く音 loop
		MapAnime( "center_door" , "open" )
		Wait(30)
		StopSE(SE_GIM_DOOR_ROCK,1000)	// stop loop
		PlaySE(SE_GIM_DOOR_ROCK_STOP, 100, 0,  0, 0, 1.0f, 0)	// 停止音
		EarthQuake(0.1f,0.1f,10)

		Wait(30)

		FadeOut(FADE_BLACK,FADE_NORMAL)
		WaitFade()
		RestoreCamera(0,0)
		Wait(30)
		FadeIn(FADE_BLACK,FADE_NORMAL)
		WaitFade()

	}
}


//-------------------------------------------
// 隠し通路穴 in
function "hole_01_in"
{
	SetFlag(SF_ALLMUTEKI,1)		//無敵ＯＮ
//	SetStopFlag(STOPFLAG_PC)
	SetStopFlag(STOPFLAG_EVENT)
	SaveCamera()

	FadeOut(FADE_BLACK,FADE_NORMAL)
	WaitFade()

	LoadArg("map/mp6402/mp6402.arg")
	if ( !FLAG[GF_04MP6402_IN_DANAROOM] )
	{
		SetFlag(GF_04MP6402_IN_DANAROOM,1)
		EventCue("mp6402:hole_01_out")
		//EventCue("mp6402:EV_M04S230")
	}
	else
	{
		EventCue("mp6402:hole_01_out")
	}
}

//-------------------------------------------
// 隠し通路穴 out
function "hole_02_out"
{
	SetFlag(SF_ALLMUTEKI,1)		//無敵ＯＮ
	SetStopFlag(STOPFLAG_PC)
	SetStopFlag(STOPFLAG_EVENT)
	SaveCamera()

	FadeOut(FADE_BLACK,0)

	SetChrPos("LEADER",40.80f, 1.91f, 0.14f)
	Turn("LEADER" ,-102.11f,360.0f)
	ResetPartyPos()
	ResetFollowPoint()

	MoveCameraAt( 0 , 40.799f , 1.911f , 2.006f , 0 )	// 注視点
	ChangeCameraDistance( 0 , 7.000f , 0 )		// 基本距離
	ChangeCameraElevation( 0 , 14.812f , 0 )	// 基本仰角
	RotateCamera( 0 , 102.113f , 0 )				// 角度
	ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
	SetCameraZPlane( 0.500f , 900.000f )			// ZPlane
	RollCamera( 0 , 0.0f , 0 )				// ロール回転
	// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。
	CallFunc("system:camera_reset")

	FadeIn(FADE_BLACK,FADE_NORMAL)
	WaitFade()

	SetFlag(SF_ALLMUTEKI,0)		//無敵ＯＦＦ
	ResetStopFlag(STOPFLAG_PC)
	ResetStopFlag(STOPFLAG_EVENT)
}



////////////////////////////////////////////////////////////////////////////////
// メインスクリプト
////////////////////////////////////////////////////////////////////////////////


function "EV_M04S220"		 //扉の開閉装置を操作する
{
//開始処理ここから-----------------------------------------------

	CallFunc("system:event_begin")

	SetStopFlag(STOPFLAG_EVENT)
	FadeOut(FADE_BLACK, 0)
	WaitFade()
	
	//イベント開始前情報の保存
	SaveEventState()
	SaveCamera()

	//パーティ状態のリセット
	CallFunc("system:party_reset")

	//環境の初期化・不要なものを隠す
	ClearDebris()
	ResetChrPos((CHRTYPE_MONS | REMOVE_POS))
	//ResetChrPos((CHRTYPE_NPC | REMOVE_POS))

	//キャラ初期状態の設定				
	SetChrWork("ADOL", CWK_DEFAULT_SKIPNODE_OFF, 1)
	SetChrPos("ADOL",46.85f, -15.19f, 0.00f)
	Turn("ADOL", 155.34f, 360.0f)
	ChangeAnimation("ADOL", "ANI_WAIT", -1, 1)
	ChangeSubAnimation("ADOL", SUBMOT_EYE, ANI_E_WAIT, 1)
	ChangeSubAnimation("ADOL", SUBMOT_MOUTH, ANI_M_WAIT, 1)
	ChangeSubAnimation("ADOL", SUBMOT_EXT1, ANI_E_LOOKC, 1)
	LookReset("ADOL")
	SetChrInfoFlag("ADOL", INFOFLAG_NOCHRATARI)

	SetChrWork("RICOTTA", CWK_DEFAULT_SKIPNODE_OFF, 1)
	SetChrPos("RICOTTA",46.34f, -16.03f, 0.00f)
	Turn("RICOTTA", 155.34f,360.0f)
	ChangeAnimation("RICOTTA", "ANI_WAIT", -1, 1)
	ChangeSubAnimation("RICOTTA", SUBMOT_EYE, ANI_E_WAIT, 1)
	ChangeSubAnimation("RICOTTA", SUBMOT_MOUTH, ANI_M_WAIT, 1)
	ChangeSubAnimation("RICOTTA", SUBMOT_EXT1, ANI_E_LOOKC, 1)
	LookReset("RICOTTA")
	SetChrInfoFlag("RICOTTA", INFOFLAG_NOCHRATARI)

	SetChrWork("SAHAD", CWK_DEFAULT_SKIPNODE_OFF, 1)
	SetChrPos("SAHAD",44.77f, -15.93f, 0.00f)
	Turn("SAHAD", 176.66f,360.0f)
	ChangeAnimation("SAHAD", "ANI_WAIT", -1, 1)
	ChangeSubAnimation("SAHAD", SUBMOT_EYE, ANI_E_WAIT, 1)
	ChangeSubAnimation("SAHAD", SUBMOT_MOUTH, ANI_M_WAIT, 1)
	ChangeSubAnimation("SAHAD", SUBMOT_EXT1, ANI_E_LOOKC, 1)
	LookReset("SAHAD")
	SetChrInfoFlag("SAHAD", INFOFLAG_NOCHRATARI)

	SetChrWork("LAXIA", CWK_DEFAULT_SKIPNODE_OFF, 1)
	SetChrPos("LAXIA", 47.87f, -15.12f, 0.00f)
	Turn("LAXIA",162.45f, 360.0f)
	ChangeAnimation("LAXIA", "ANI_WAIT", -1, 1)
	ChangeSubAnimation("LAXIA", SUBMOT_EYE, ANI_E_WAIT, 1)
	ChangeSubAnimation("LAXIA", SUBMOT_MOUTH, ANI_M_WAIT, 1)
	ChangeSubAnimation("LAXIA", SUBMOT_EXT1, ANI_E_LOOKC, 1)
	LookReset("LAXIA")
	SetChrInfoFlag("LAXIA", INFOFLAG_NOCHRATARI)

	SetChrWork("HUMMEL", CWK_DEFAULT_SKIPNODE_OFF, 1)
	SetChrPos("HUMMEL", 43.95f, -16.69f, 0.00f)
	Turn("HUMMEL", -179.79f, 360.0f)
	ChangeAnimation("HUMMEL", "ANI_WAIT", -1, 1)
	ChangeSubAnimation("HUMMEL", SUBMOT_EYE, ANI_E_WAIT, 1)
	ChangeSubAnimation("HUMMEL", SUBMOT_MOUTH, ANI_M_WAIT, 1)
	ChangeSubAnimation("HUMMEL", SUBMOT_EXT1, ANI_E_LOOKC, 1)
	LookReset("HUMMEL")
	SetChrInfoFlag("HUMMEL", INFOFLAG_NOCHRATARI)

	SetChrWork("Thanatos", CWK_DEFAULT_SKIPNODE_OFF, 1)
	SetChrPos("Thanatos", 45.78f, -17.19f, 0.00f)
	Turn("Thanatos", 173.11f,360.0f)
	ChangeAnimation("Thanatos", "ANI_WAIT", -1, 1)
	ChangeSubAnimation("Thanatos", SUBMOT_EYE, ANI_E_WAIT, 1)
	ChangeSubAnimation("Thanatos", SUBMOT_MOUTH, ANI_M_WAIT, 1)
	ChangeSubAnimation("Thanatos", SUBMOT_EXT1, ANI_E_LOOKC, 1)
	LookReset("Thanatos")
	SetChrInfoFlag("Thanatos", INFOFLAG_NOCHRATARI)

	MapAnime( "force_door2" , "anime_stop" )
	MapHide( "line_l2", 0)
	MapHide( "line_r2", 0)

	//カメラ設定
	MoveCameraAt( 0 , 47.138f , -15.177f , 2.558f , 0 )	// 注視点
	ChangeCameraDistance( 0 , 4.140f , 0 )		// 基本距離
	ChangeCameraElevation( 0 , -3.865f , 0 )	// 基本仰角
	RotateCamera( 0 , 23.947f , 0 )				// 角度
	ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
	SetCameraZPlane( 0.100f , 1200.000f )			// ZPlane
	RollCamera( 0 , 0.0f , 0 )				// ロール回転
	// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

	// 被写界深度の設定
	SetDoF(0, LERP_LINEAR, 3.000, 70.000, 1.000, 0.700, 0.500)					//イベント毎に調整
	// グレアの設定
	SetGlare(0, LERP_LINEAR, 0.700, 1.300, 1.000, 1.000, 0.600, 0.000, 1.000)	//イベント毎に調整

	//スキップ許可
	SetSkipScript("mp6401:EV_M04S220_ED")

	//開始処理ここまで-----------------------------------------------
	
	//　　寺院内で扉を開閉させる
	//　　理力仕掛けの装置を操作するとイベント開始。

	// カメラ移動
	ExecuteCmd(1000, MoveCameraAt, INTERPOLATE_SPHERE , 47.138f , -15.177f , 1.818f , 150 )
	
	 // フェードイン
	FadeIn(FADE_BLACK,FADE_FAST)
	
	//PlaySE(SE_GIM_SW_4, 100, 0,  0, 0, 1.0f, 0)	// gimse
	MapAnime( "switch_eff2" , "switch_on_ani" )
	Wait(10)
	MapAnime( "switch_eff2" , "switch_on" )
	
	// フェード待ち
	WaitFade()

	PlaySE(SE_GIM_DOOR_LIGHT_2, 60, 0,  0, 100, 1.0f, 0)	// 丸いのが光る
	MapAnime( "eff2" , "switch_on_ani" )
	Wait(10)
	MapAnime( "eff2" , "switch_on" )
	Wait(30)

	Wait(10)
	//PlaySE(SE_M04S220_01, 100, 0, 0, 0, 1.0f, 0)	//光る
	PlaySE(SE_GIM_DOOR_LIGHT, 60, 0,  0, 100, 1.0f, 0)	// gimse 光る
	MapHide( "line_l2", 1)
	MapHide( "line_r2", 1)
	Wait(30)

	//PlaySE(SE_M04S220_02, 100, 0, 0, 0, 1.0f, 0)	//扉開く
	PlaySE(SE_GIM_DOOR_ROCK, 100, 1,  0, 0, 1.0f, 0)	// 動く音 loop
	MapAnime( "force_door2" , "open" )
	Wait(60)
	StopSE(SE_GIM_DOOR_ROCK,1000)	// stop loop
	PlaySE(SE_GIM_DOOR_ROCK_STOP, 100, 0,  0, 0, 1.0f, 0)	// 停止音
	EarthQuake(0.1f,0.1f,10)

	// カメラ待ち
	WaitThread(1000)

//	//	テキスト
//	TalkPopup(UNDEF,0,3,SYSTEM_PPOSX,SYSTEM_PPOSY,0)
//	{
//		"#7C……どこかで扉が開くような音がした。"
//	}
//	WaitPrompt()
//	WaitCloseWindow()

	// リコッタ
	TalkPopup("RICOTTA",0,2,0,0,0) {
		"#000e#000mトビラ、勝手に動いた！"
	}
	WaitPrompt()
	WaitCloseWindow()

	ChangeAnimation( "LAXIA", "ANI_EV_UDEGUMI_S", -1, 1 )	// 腕組
	Wait(10)

	// ラクシャ
	TalkPopup("LAXIA",0,2,0,0,0) {
		"#000e#000m不思議な装置ですね……"
		"どういう原理で動いているのでしょう？"
	}
	WaitPrompt()
	WaitCloseWindow()

	//　　ここで操作許可。
	FadeOut(FADE_BLACK,FADE_FAST)
	WaitFade()

//終了処理ここから----------------------------------------------------
	CallFunc("mp6401:EV_M04S220_ED")
}

function "EV_M04S220_ED"
{
	//終了処理はスキップ禁止
	SetSkipScript("")

	//イベント前のキャラ情報を復帰
	RestoreEventState()

	//隠したものを復帰。
	ResetChrPos((CHRTYPE_MONS | RESET_POS | RESET_AISTATE))

	//キャラモーション初期化
	CallFunc("system:reset_chrmot_ADOL")
	CallFunc("system:reset_chrmot_LAXIA")
	CallFunc("system:reset_chrmot_SAHAD")
	CallFunc("system:reset_chrmot_HUMMEL")
	CallFunc("system:reset_chrmot_RICOTTA")
	//CallFunc("system:reset_chrmot_Thanatos")

	SetChrPos("Thanatos", -100000.00f,0.00f,0.00f)		// 彼方へ
	SetChrPos("mons04", -100000.00f,0.00f,0.00f)		// 彼方へ
	SetChrPos("mons05", -100000.00f,0.00f,0.00f)		// 彼方へ

	//パーティキャラを解放
	ReleaseEventPartyChr()

	//マップパラメーターリセット
	ResetMapParam(-1)

	//フラグ処理
	//SetFlag(SF_SETRAMSAVE, 1)
	SetFlag(GF_04MP6402_CHECK_GIM,1)	//扉の開閉装置を操作する
	SetFlag( GF_MP6401_SWITCH_02, 1)	//  mp6401理力扉１階スイッチ
	CallFunc("mp6401:init")

	//イベント後の再配置
	SetChrPos("LEADER",44.95f, -16.68f, 0.00f)
	Turn("LEADER",179.79f,360.0f)
	ResetPartyPos()
	ResetFollowPoint()
	//Wait(1) //処理待ち用

	//カメラ位置復帰
	MoveCameraAt( 0 , 44.950f , -16.682f , 1.873f , 0 )	// 注視点
	ChangeCameraDistance( 0 , 7.000f , 0 )		// 基本距離
	ChangeCameraElevation( 0 , 15.463f , 0 )	// 基本仰角
	RotateCamera( 0 , 1.305f , 0 )				// 角度
	ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
	SetCameraZPlane( 0.500f , 900.000f )			// ZPlane
	RollCamera( 0 , 0.0f , 0 )				// ロール回転

	//RestoreCamera(0, 0)		//※上記カメラ位置を指定する場合は不要
	CallFunc("system:camera_reset")

	ResetStopFlag(STOPFLAG_EVENT)

	FadeIn(FADE_BLACK, FADE_FAST)
	//WaitFade()

//終了処理ここまで----------------------------------------------------
}



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//■クエストセクション

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//===============================================================
//
// 【QS610】親友の遺言（ダーナ）
// ▽中央書架の棚を調べる（×４）
//
function "QS_610_Look_B1"
{
	//マーカー消去
	DelMapMarker( SMI_QUEST, PAGE_MP6401, MARKER_QS_610_LP2, 0, 0)		// 【QS610】親友の遺言（ダーナ）「▽中央書架の棚を調べる」の場所用１
	CallFunc("mp6401:QS_610_Look_B")
}
function "QS_610_Look_B2"
{
	//マーカー消去
	DelMapMarker( SMI_QUEST, PAGE_MP6401, MARKER_QS_610_LP3, 0, 0)		// 【QS610】親友の遺言（ダーナ）「▽中央書架の棚を調べる」の場所用２
	CallFunc("mp6401:QS_610_Look_B")
}
function "QS_610_Look_B3"
{
	//マーカー消去
	DelMapMarker( SMI_QUEST, PAGE_MP6401, MARKER_QS_610_LP4, 0, 0)		// 【QS610】親友の遺言（ダーナ）「▽中央書架の棚を調べる」の場所用３
	CallFunc("mp6401:QS_610_Look_B")
}
function "QS_610_Look_B4"
{
	//マーカー消去
	DelMapMarker( SMI_QUEST, PAGE_MP6401, MARKER_QS_610_LP5, 0, 0)		// 【QS610】親友の遺言（ダーナ）「▽中央書架の棚を調べる」の場所用４
	CallFunc("mp6401:QS_610_Look_B")
}
function "QS_610_Look_B"
{
	//　　ＬＰで調べるとメッセージ。

//開始処理ここから----------------------------------------------------
	SetStopFlag(STOPFLAG_SIMPLEEVENT2)
	ResetStopFlag(STOPFLAG_NOCHARACLIP)
	SaveCamera()

	ResetMotion( "PARTYALL" , 0 )
	StopEffect(-1,PARTYALL,1)
	StopEmotion( "PARTYALL" )
	ResetMoveVec("PARTYALL")
//開始処理ここまで-----------------------------------------------


	//	テキスト
	TalkPopup(UNDEF, 0, 3, SYSTEM_PPOSX, SYSTEM_PPOSY, 0)
	{
		"#7C書架には何も残っていないようだ。"
	}
	WaitPrompt()
	WaitCloseWindow()

	TalkPopup("DANA", 0, 3, STOPPER_PPOSX, STOPPER_PPOSY, 0)
	{
		"#000e#000mうーん、本が残っていれば"
		"参考になったかもしれないのに……"
	}
	WaitPrompt()
	WaitCloseWindow()

//終了処理ここから----------------------------------------------------
	CrossFade(FADE_CROSS)
	SetStopFlag(STOPFLAG_NOCHARACLIP)

	//イベント後の再配置
//	SetChrPos("LEADER",-36.63f, -632.52f, 29.10f)
//	Turn("LEADER",-60.59f,360.0f)
	ResetPartyPos()
	ResetFollowPoint()
	//Wait(1) //処理待ち用

	RestoreCamera(0,0)
	ResetCameraObserver(0)
	ResetCameraZPlane()
	WaitFade()
	Wait(FADE_CROSS)

	ResetStopFlag(STOPFLAG_SIMPLEEVENT2)
//終了処理ここまで----------------------------------------------------
}
//===============================================================
//
// 【QS610】親友の遺言（ダーナ）
// ▼中央書架の机を調べる
//
function "QS_610_Look_Desk"
{
	//机上には石版が散乱している。
	//ＬＰで調べるとイベント。

//開始処理ここから----------------------------------------------------

	CallFunc("system:event_begin")

	//イベント開始前情報の保存
	SaveEventState()
	SaveCamera()

	//パーティ状態のリセット
	CallFunc("system:party_reset")

	//環境の初期化・不要なものを隠す
	ClearDebris()
	ResetChrPos((CHRTYPE_MONS | REMOVE_POS))
	ResetChrPos((CHRTYPE_NPC | REMOVE_POS))

	//キャラ初期状態の設定
	SetChrWork("ADOL", CWK_DEFAULT_SKIPNODE_OFF, 1)
	SetChrPos("ADOL",-10.91f,-9.15f,8.04f)
	Turn("ADOL",110.94f,360.0f)
	ChangeAnimation( "ADOL" , "ANI_WAIT", -1 , 1 )
	ChangeSubAnimation("ADOL",SUBMOT_EYE,ANI_E_WAIT,1)
	ChangeSubAnimation("ADOL",SUBMOT_MOUTH,ANI_M_WAIT,1)
	ChangeSubAnimation("ADOL",SUBMOT_EXT1,ANI_E_LOOKC,1)
	SetChrInfoFlag("ADOL", INFOFLAG_NOCHRATARI)

	SetChrWork("DANA", CWK_DEFAULT_SKIPNODE_OFF, 1)
	SetChrPos("DANA", -15.12f, -9.41f, 8.00f)
	Turn("DANA", -69.54f, 360.0f)
	ChangeAnimation( "DANA" , "ANI_WAIT", -1 , 1 )
	ChangeSubAnimation("DANA",SUBMOT_EYE,ANI_E_WAIT,1)
	ChangeSubAnimation("DANA",SUBMOT_MOUTH,ANI_M_WAIT,1)
	ChangeSubAnimation("DANA",SUBMOT_EXT1,ANI_E_LOOKC,1)
	SetChrInfoFlag("DANA", INFOFLAG_NOCHRATARI)

	SetChrWork("LAXIA", CWK_DEFAULT_SKIPNODE_OFF, 1)	
	SetChrPos("LAXIA",-10.58f,-10.65f,8.06f)
	Turn("LAXIA",136.76f,360.0f)
	ChangeAnimation( "LAXIA" , "ANI_WAIT", -1 , 1 )
	ChangeSubAnimation("LAXIA",SUBMOT_EYE,ANI_E_WAIT,1)
	ChangeSubAnimation("LAXIA",SUBMOT_MOUTH,ANI_M_WAIT,1)
	ChangeSubAnimation("LAXIA",SUBMOT_EXT1,ANI_E_LOOKC,1)
	SetChrInfoFlag("LAXIA", INFOFLAG_NOCHRATARI)

	SetChrWork("SAHAD", CWK_DEFAULT_SKIPNODE_OFF, 1)
	SetChrPos("SAHAD", -13.29f, -12.47f, 8.04f)
	Turn("SAHAD", 177.11f, 360.0f)
	ChangeAnimation( "SAHAD" , "ANI_WAIT", -1 , 1 )
	ChangeSubAnimation("SAHAD",SUBMOT_EYE,ANI_E_WAIT,1)
	ChangeSubAnimation("SAHAD",SUBMOT_MOUTH,ANI_M_WAIT,1)
	ChangeSubAnimation("SAHAD",SUBMOT_EXT1,ANI_E_LOOKC,1)
	SetChrInfoFlag("SAHAD", INFOFLAG_NOCHRATARI)

	SetChrWork("RICOTTA", CWK_DEFAULT_SKIPNODE_OFF, 1)
	SetChrPos("RICOTTA",-9.43f,-10.36f,8.06f)
	Turn("RICOTTA",109.17f,360.0f)
	ChangeAnimation( "RICOTTA" , "ANI_WAIT", -1 , 1 )
	ChangeSubAnimation("RICOTTA",SUBMOT_EYE,ANI_E_WAIT,1)
	ChangeSubAnimation("RICOTTA",SUBMOT_MOUTH,ANI_M_WAIT,1)
	ChangeSubAnimation("RICOTTA",SUBMOT_EXT1,ANI_E_LOOKC,1)
	SetChrInfoFlag("RICOTTA", INFOFLAG_NOCHRATARI)

	SetChrWork("HUMMEL", CWK_DEFAULT_SKIPNODE_OFF, 1)
	SetChrPos("HUMMEL",-9.43f,-11.48f,8.06f)
	Turn("HUMMEL",128.44f,360.0f)
	ChangeAnimation( "HUMMEL" , "ANI_WAIT", -1 , 1 )
	ChangeSubAnimation("HUMMEL",SUBMOT_EYE,ANI_E_WAIT,1)
	ChangeSubAnimation("HUMMEL",SUBMOT_MOUTH,ANI_M_WAIT,1)
	ChangeSubAnimation("HUMMEL",SUBMOT_EXT1,ANI_E_LOOKC,1)
	SetChrInfoFlag("HUMMEL", INFOFLAG_NOCHRATARI)
	//BGM設定◆
	//PlayBGM( BGM_FIELD_101 , XX )

	//カメラ設定
	MoveCameraAt( 0 , -13.814f , -10.204f , 9.338f , 0 )	// 注視点
	ChangeCameraDistance( 0 , 3.280f , 0 )		// 基本距離
	ChangeCameraElevation( 0 , 13.178f , 0 )	// 基本仰角
	RotateCamera( 0 , 147.691f , 0 )				// 角度
	ChangeCameraPers( 0 , 51.000f , 0 )			// 視野角
	SetCameraZPlane( 0.500f , 900.000f )			// ZPlane
	RollCamera( 0 , 0.0f , 0 )				// ロール回転

	// 擬似フェード用ポートレート読み込み
	Portrait_Load(0, "system/black.itp")		//擬似フェードアウト用
	Portrait_Create(0, 0, 0, 0, 0, 64,64, 0.0f, 0x00ffffff, 0x00000000)

	////書物のポートレート読み込み
	//Portrait_Load(   1 , "visual/help/topic_10.itp" )	//書物のポートレート　◆仮入力：topic_10.itpで代用しています
	//Portrait_Create(1, TOPIC_POS_X, TOPIC_POS_Y,
	//				0, 	0, TOPIC_SCALE_X, TOPIC_SCALE_Y,
	//				0, 0x00ffffff, 0x00000000)

	// 被写界深度の設定
	SetDoF(0, LERP_LINEAR, 2.000, 80.000 ,1.000 ,0.700 ,0.500)
	// グレアの設定
	SetGlare(0, LERP_LINEAR, 0.700, 1.300 ,1.000 ,1.000 ,0.600 ,0.000 ,1.000)

	//スキップ許可
	SetSkipScript("mp6401:QS_610_Look_Desk2_ED")

//開始処理ここまで-----------------------------------------------

	LookTo("SAHAD", -13.49f, -10.04f, 8.24f)
	LookTo("DANA", -13.49f, -10.04f, 8.24f)

	Wait(10)

	FadeIn(FADE_BLACK,FADE_NORMAL)
	WaitFade()

	ChangeAnimation("SAHAD", "ANI_EV_TEBURI", -1, 1)
	TalkPopup("SAHAD", 0, 2, 0, 0, 0)
	{
		"#000e#000mお？　１つだけ"
		"石版が残ってるみてーだな。"
	}
	WaitPrompt()
	WaitCloseWindow()
	
	Wait(10)

	CrossFade(FADE_FAST)

	SetChrPos("SAHAD",-9.35f,-9.19f,8.04f)
	Turn("SAHAD",102.61f,360.0f)
	LookReset("SAHAD")

	MoveCameraAt(0, -15.823f, -8.717f, 8.569f, 0)	// 注視点
	ChangeCameraDistance(0, 4.500f, 0)		// 基本距離
	ChangeCameraElevation(0, 18.077f, 0)	// 基本仰角
	RotateCamera(0, 56.389f, 0)				// 角度
	ChangeCameraPers(0, 49.000f, 0)			// 視野角
	SetCameraZPlane(0.500f, 900.000f)			// ZPlane
	RollCamera(0, 0.0f, 0)				// ロール回転

	ExecuteCmd(1000, MoveCameraAt, INTERPOLATE_SPHERE, -16.005f, -8.596f, 8.569f, 70)		// 注視点
	ExecuteCmd(1001, RotateCamera, INTERPOLATE_SPHERE, 56.389f, 70)		// 角度

	WaitThread(1000)
	WaitThread(1001)

	ChangeAnimation( "DANA" , "ANI_EV_SIAN_S", -1 , 1 )
	//LookSpd("DANA", 0.05f, 0.05f, 0.05f)// ゆっくりめに首向き
	Look("DANA", 0.00f, -10.00f)

	TalkPopup("DANA", 0, 1, 0, 0, 0)
	{
		"#011e#000mこれはもしかして……オルガちゃんが"
		"最後まで調べていた資料なのかも。\p"
		"#012eちょっと待ってね、"
		"それらしい記述は……"
	}
	WaitPrompt()
	WaitCloseWindow()

	Wait(15)

	//　　ダーナにＰＡエモーション
	EmotionEx("DANA", 0.00f, EMO_PA, 0, 5, 1, 1, 1.0f)	//パッ
	Wait(35)
	LookSpd("DANA", LOOKSPD_DEFAULT, LOOKSPD_DEFAULT, LOOKSPD_DEFAULT)

	ChangeAnimation( "DANA" , "ANI_EV_SIAN_E", -1 , 1 )

	TalkPopup("DANA", 0, 1, 0, 0, 0)
	{
		"#000e#000mあ、これは……"
	}
	WaitPrompt()
	WaitCloseWindow()
	
	Wait(10)

	////　　書物のポートレートを表示。	◆仮入力
	//Portrait_Anime(1, PR_ANIME_COLOR, 1.0f, 1.0f, 1.0f, 1.0f, FADE_NORMAL)
	//Wait(FADE_NORMAL)

	CrossFade(FADE_CROSS)
	MoveCameraAt(0, -13.366f, -10.219f, 8.569f, 0)	// 注視点
	ChangeCameraDistance(0, 3.800f, 0)		// 基本距離
	ChangeCameraElevation(0, 68.034f, 0)	// 基本仰角
	RotateCamera(0, 249.644f, 0)				// 角度
	ChangeCameraPers(0, 30.000f, 0)			// 視野角
	SetCameraZPlane(0.500f, 900.000f)			// ZPlane
	RollCamera(0, 0.0f, 0)				// ロール回転
	// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

	SetChrPos("DANA",-14.67f,-8.20f,8.00f)
	Turn("DANA",-86.94f,360.0f)
	LookChr("DANA" , "LAXIA")
	Wait(FADE_CROSS)

	Wait(20)

	FadeBGM(70, 30)

	//ハーフフェードして以下を表示。
	// 擬似ハーフフェードアウト表示
	Portrait_Anime(0, PR_ANIME_SCALE, 30.0f, 17.0f, 0, 0, 0)
	Portrait_Anime(0, PR_ANIME_COLOR, 1.0f, 1.0f, 1.0f, 0.5f, FADE_FAST)
	Wait(FADE_FAST)

	//	テキスト
	TalkPopup(UNDEF,0,3,SYSTEM_PPOSX,SYSTEM_PPOSY,0)
	{
		"#7C【青き鳥の伝承】"
		"#7C聖者ウリアヌスが従える賢鳥の一羽。\p"
		"#7Cその者は、かつて周囲から"
		"#7C白い目で見られていたという。\p"
		"#7Cなぜなら晴れた日には雨になる、"
		"#7C豊作の年には飢饉になると"
		"#7C見当違いを言うからである。\p"
		"#7Cだが後に、全ての予見は"
		"#7C正しかったと判るのであった……"
	}
	WaitPrompt()
	WaitCloseWindow()

	FadeBGM(100, 30)

	//　　ハーフフェードを戻す。
	// 擬似フェードアウト削除
	Portrait_Anime(0, PR_ANIME_COLOR, 1.0f, 1.0f, 1.0f, 0.0f, FADE_FAST)
	Wait(FADE_FAST)

	Wait(20)

	CrossFade(FADE_FAST)
	MoveCameraAt( 0 , -10.791f , -9.469f , 9.215f , 0 )	// 注視点
	ChangeCameraDistance( 0 , 4.640f , 0 )		// 基本距離
	ChangeCameraElevation( 0 , 15.332f , 0 )	// 基本仰角
	RotateCamera( 0 , 29.041f , 0 )				// 角度
	ChangeCameraPers( 0 , 43.000f , 0 )			// 視野角
	SetCameraZPlane( 0.500f , 900.000f )			// ZPlane
	RollCamera( 0 , 0.0f , 0 )				// ロール回転

	ExecuteCmd( 1, MoveTo, "DANA" , -12.60f,-8.21f,8.00f , 0.1f , 0.185f )
	//SetChrPos("DANA",-12.60f,-8.21f,8.00f)
	//Turn("DANA",-86.94f,360.0f)

	Wait(FADE_FAST)

	ChangeAnimation("LAXIA", "ANI_EV_TEBURI", -1, 1)
	TalkPopup("LAXIA",0,1,0,0,0)
	{
		"#000e#000mどこかダーナさんを想い起こしますね。"
		"ダーナさん、これはやはり……"
	}
	WaitPrompt()
	WaitCloseWindow()

	TalkPopup("DANA",0,2,0,0,0)
	{
		"#000e#000mうん、間違いなさそうかも。\p"
		"オルガちゃんが言っていたのは"
		"きっとこの鳥のことだよ！"
	}
	WaitPrompt()
	WaitCloseWindow()

	ChangeAnimation("SAHAD", "ANI_EV_RYOTEKOSI_S", -1, 1)
	TalkPopup("SAHAD", 0, 2, 0, 0, 0)
	{
		"#000e#000mガハハ、調べてみるもんだなあ。\p"
		"お？　だが『かの者に託す』って言葉は"
		"どーいう意味だ……？"
	}
	WaitPrompt()
	WaitCloseWindow()

	ChangeAnimation("HUMMEL", "ANI_EV_UDEGUMI_S", -1, 1)
	TalkPopup("HUMMEL",0,1,0,0,0)
	{
		"#000e#000mフム、まだ情報が足りないようだな。"
	}
	WaitPrompt()
	WaitCloseWindow()

	Wait(5)

	//選択肢
	SetFlag(TF_MENU_SELECT,0)
	MenuReset()
	MenuType(MENUTYPE_POPUP)
	MenuAdd(1,"この賢者について調べてみよう")
	MenuAdd(2,"情報がありそうな場所を当たろう")
	MenuOpen( TF_MENU_SELECT , -1 , ADOLMENU_PPOSY , -2 , -2 , 10 , 0)
	WaitMenu(0)
	MenuClose(10,0)
	//Wait(20)
	
	//────────────────────
	//	⇒賢者について調べてみよう
	if (FLAG[TF_MENU_SELECT] == 1)
	{
		ChangeAnimation("ADOL", "ANI_EV_TEBURI_L", -1, 1)
		SetChrWork("ADOL", CWK_FORCELIPSYNC, 1)
		Wait(30)
		SetChrWork("ADOL", CWK_FORCELIPSYNC, 0)
		Wait(20)
		
		WaitThread(1)
		
		Look("DANA", 0 , -15 )
		ChangeAnimation( "DANA" , "ANI_EV_UDEGUMI_S", -1 , 1 )
		TalkPopup("DANA", 0, 2, 0, 0, 0)
		{
			"#011e#000mうーん、私が知っているのは"
			"大まかな評伝くらいだし……\p"
			"#012eそうだ、バハの塔にいけば"
			"何かわかるかもしれないね。"
			
		}
		WaitPrompt()
		WaitCloseWindow()

		LookChr("DANA","ADOL")
		ChangeAnimation( "DANA" , "ANI_EV_UDEGUMI_E", -1 , 1 )
		TalkPopup("DANA", 0, 0, 0, 0, 0, 0)
		{
			"#000e#000mみんな、ごめんなさい。"
			"もうちょっと付き合ってもらえるかな？"
		}
		WaitPrompt()
		WaitCloseWindow()

		ChangeAnimation("RICOTTA", "ANI_EV_RYOTEKOSI_S", -1, 1)
		TalkPopup("RICOTTA",0,1,260,170,0)
		{
			"#000e#000mなはは、もちろんだ！"
		}
		WaitPrompt()
		WaitCloseWindow()
		
		//ChangeAnimation("LAXIA", "ANI_EV_TEBURI", -1, 1)
		TalkPopup("LAXIA",0,1,0,0,0)
		{
			"#000e#000m早速バハの塔を当たってみましょう！"
		}
		WaitPrompt()
		WaitCloseWindow()
	}
	//	⇒情報がありそうな場所を当たろう
	else if (FLAG[TF_MENU_SELECT] == 2)
	{
		ChangeAnimation("ADOL", "ANI_EV_TEBURI_L", -1, 1)
		SetChrWork("ADOL", CWK_FORCELIPSYNC, 1)
		Wait(30)
		SetChrWork("ADOL", CWK_FORCELIPSYNC, 0)
		Wait(20)

		WaitThread(1)

		LookChr("DANA","ADOL")

		ChangeAnimation("DANA", "ANI_EV_WAIT2_S", -1, 1)
		TalkPopup("DANA", 0, 2, 0, 0, 0, 0)
		{
			"#080e#080mあはは……みんな、"
			"付き合ってくれてありがとう。\p"
			"とりあえずバハの塔に行ってみよう。"
			"あそこなら手がかりが見つかるかも。"
		}
		WaitPrompt()
		WaitCloseWindow()
		
		ChangeAnimation("RICOTTA", "ANI_EV_GUTSPOSE_S", -1, 1)
		TalkPopup("RICOTTA", 0, 1, 0, 0, 0)
		{
			"#000e#000mなはは、御意っ！\p"
			"何かわかるといいな、ダーナ姉！"
		}
		WaitPrompt()
		WaitCloseWindow()
	}
	//────────────────────

	//　　操作許可。
	FadeOut(FADE_BLACK,FADE_NORMAL)
	WaitFade()

//終了処理ここから----------------------------------------------------
	CallFunc("mp6401:QS_610_Look_Desk2_ED")
}
function "QS_610_Look_Desk2_ED"
{
	//終了処理はスキップ禁止
	SetSkipScript("")

	//イベント前のキャラ情報を復帰
	RestoreEventState()

	//隠したものを復帰。
	ResetChrPos((CHRTYPE_MONS | RESET_POS | RESET_AISTATE))

	//キャラモーション初期化
	CallFunc("system:reset_chrmot_ALL")
	LookSpd("DANA", LOOKSPD_DEFAULT, LOOKSPD_DEFAULT, LOOKSPD_DEFAULT)

	//パーティキャラを解放
	ReleaseEventPartyChr()

	//ポートレート全開放・全クローズ
	Portrait_Close(-1)
	Portrait_Unload(-1)

	//マップパラメーターリセット
	ResetMapParam(-1)

	//フラグ立て・アイテム入手
	SetFlag( GF_QS610_LOOK_DESK, 1 )			//【QS610】▼中央書架の机を調べる を見た
	SetDiaryFlag( DF_QS610_001, 1 )				//【QS610】★『青き鳥』についての伝承を確認したが
	//マーカー消去と設置
	DelMapMarker( SMI_QUEST, PAGE_MP6401, MARKER_QS_610_LP1, 0, 0)		// 【QS610】親友の遺言（ダーナ）「▽ダーナの部屋の棚を調べる」の場所用
	DelMapMarker( SMI_QUEST, PAGE_MP6401, MARKER_QS_610_LP2, 0, 0)		// 【QS610】親友の遺言（ダーナ）「▽中央書架の棚を調べる」の場所用１
	DelMapMarker( SMI_QUEST, PAGE_MP6401, MARKER_QS_610_LP3, 0, 0)		// 【QS610】親友の遺言（ダーナ）「▽中央書架の棚を調べる」の場所用２
	DelMapMarker( SMI_QUEST, PAGE_MP6401, MARKER_QS_610_LP4, 0, 0)		// 【QS610】親友の遺言（ダーナ）「▽中央書架の棚を調べる」の場所用３
	DelMapMarker( SMI_QUEST, PAGE_MP6401, MARKER_QS_610_LP5, 0, 0)		// 【QS610】親友の遺言（ダーナ）「▽中央書架の棚を調べる」の場所用４
	DelMapMarker( SMI_QUEST, PAGE_MP6401, MARKER_QS_610_LP6, 0, 0)		// 【QS610】親友の遺言（ダーナ）「▼中央書架の机を調べる」の場所用
	SetMapMarker( SMI_QUEST, PAGE_MP632x, MARKER_QS_610_LP7, -0.04f,2.88f,332.75f,	-0.04f,2.88f,	MARKER_QS_610_LP7, MN_D_MP6326,	4)	// 【QS610】親友の遺言（ダーナ）「▼バハの塔の石碑を調べる」の場所用

	SetChrPos("LP_QS_610_Look_Desk", -100000.00f  , 0.00f ,0.00f )		// ＬＰを消去

//	CallFunc("mp6401:init")

	//イベント後の再配置
	SetChrPos("LEADER",-9.39f,-9.96f,8.04f)
	Turn("LEADER",84.27f,360.0f)
	ResetPartyPos()
	ResetFollowPoint()
	//Wait(1) //処理待ち用

	//カメラ位置復帰
	//MoveCameraAt( 0 , 0.0f , 0.0f , 0.0f , 0 )	// 注視点
	//ChangeCameraDistance( 0 , 0.0f , 0 )		// 基本距離
	//ChangeCameraElevation( 0 , 0.0f , 0 )		// 基本仰角
	//RotateCamera( 0 , 0.0f , 0 )				// 角度
	//ChangeCameraPers( 0 , 0.0f , 0 )			// 視野角
	//SetCameraZPlane( 0 , 0.0f )					// ZPlane
	//RollCamera( 0 , 0.0f , 0 )					// ロール回転

	RestoreCamera(0, 0)		//※上記カメラ位置を指定する場合は不要
	CallFunc("system:camera_reset")

	ResetStopFlag(STOPFLAG_EVENT)

	FadeIn(FADE_BLACK,FADE_FAST)
	//WaitFade()

//終了処理ここまで----------------------------------------------------
}
