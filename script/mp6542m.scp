#include "inc/mons.h"
#include "inc/def.h"
#include "inc/flag.h"
#include "inc/se.h"
#include "inc/scr_inc.h"
#include "inc/3dicon.h"
#include "inc/skilldef.h"
#include "inc/vo.h"
#include "inc/efx.h"

#include "inc/temp/mp6542m.h"

//-------------------------------------------
// mp6542m：地下聖堂　階層４　奥ギミック部屋
//-------------------------------------------
// initスクリプト
function "init"
{
					
	MapAnime("@gate_01","close")
//	MapAnime( "@gate_02" , "close_Lv3" )test
	
	MapAnime("gate01_lumi1","off")//像光11_OFF
	MapAnime("gate01_lumi2","off")//像光12_OFF
	MapAnime("gate01_lumi3","off")//像光13_OFF
	MapAnime("gate01_lumi4","off")//像光14_OFF

	MapAnime("@gate02_lumi1","off")//像光21_OFF
	MapAnime("@gate02_lumi2","off")//像光22_OFF
	MapAnime("@gate02_lumi3","off")//像光23_OFF
	MapAnime("@gate02_lumi4","off")//像光24_OFF


	//SetChrWork( "look01" , CWK_CHECKRADIUS , 3.0f )	// LP範囲
	//SetChrWork( "look02" , CWK_CHECKRADIUS , 3.0f )	// LP範囲
	SetChrWork( "lever01s" , CWK_CHECKRADIUS , 3.0f )	// LP範囲

	// イベントエリア設定制御
	EventAreaEnable( "evb2_act_1803" , 0 )	//アクティブボイス

	if( FLAG[SF_EVENT_ON] )
	{
		SetChrPos("SubEV_Past_05_SpiritI", -100000.00f, 0.00f, 0.00f)

		if(!FLAG[GF_SUBEV_PAST_SPIRITI])
		{
			SetChrPos("SubEV_Past_05_SpiritI",-151.97f,16.14f,0.00f)
		}

		// アクティブボイス
		if(!FLAG[GF_AVOICE_1803]){
			EventAreaEnable( "evb2_act_1803" , 1 )
		}
	}
	// イベントエリア設定制御
	//if( FLAG[SF_EVENT_ON] ){
	
	//イベント発生制御
		// 一般配置ファンクション呼び出し
		CallFunc("mp6542m:NpcPosition")

		SetChrWork(gim_rockmgr, CWK_TEMP_INT1, 2)//有効ゾーン
		
		// 戻りショートカット
		if( FLAG[GF_MP6541_SHORTCUT_01] ){
			MapAnime( "EVENT_gim01" , "open" )
			ChangeAnimation( "lever01s" , "ANI_STOP2", -1 , 1 )
			SetChrWork("lever01s", CWK_CHECKOFF, 1)
		}
		// 扇風機解除
		if( FLAG[GF_MP6541_SWITCH_04] ){
			MapAnime("gim03", "wait2" )
			MapHide("gim_bri" , 0 )
			EventBox( 5, 0 )//風
			EventBox( 6, 0 )//風
			EventBox( 7, 0 )//風
			EventBox( 8, 0 )//風
			EventBox( 9, 0 )//風
			EventBox( 10, 0 )//風
			SetEnvSEPlayState(65421901,0)	// 風SE停止
			SetEnvSEPlayState(65421902,0)	// 風SE停止
			SetEnvSEPlayState(65421903,0)	// 風SE停止
			SetChrWork("lookp04", CWK_CHECKOFF, 1)
			ChangeAnimation( "lookp04" , "ANI_STOP2", -1 , 1 )//OFF
		}
		// 凍結解除
		if( FLAG[GF_MP6541_SWITCH_02] ){
			MapAnime("gim_icestatue", "wait2" )
			MapHide("pori_mist_alpha" , 0 )
			EventBox( 0, 0 )//氷結
			EventBox( 1, 0 )//氷結
			EventBox( 2, 0 )//氷結
			EventBox( 3, 0 )//氷結
			EventBox( 4, 0 )//氷結
			SetEnvSEPlayState(65421801,0)	//氷結地帯用 環境SE停止
			SetChrWork("lookp02", CWK_CHECKOFF, 1)
			ChangeAnimation( "lookp02" , "ANI_STOP2", -1 , 1 )//OFF
		}
		// 段差
		if( FLAG[GF_MP6541_SWITCH_02A] && FLAG[GF_MP6541_SWITCH_02B] ) {
			MapAnime("EVENT_gim02", "open2" )
		
			SetChrWork("look01", CWK_CHECKOFF, 1)
			SetChrWork("look02", CWK_CHECKOFF, 1)
			ChangeAnimation( "look01" , "ANI_STOP2", -1 , 1 )//OFF
			ChangeAnimation( "look02" , "ANI_STOP2", -1 , 1 )//OFF
			
		} else if( FLAG[GF_MP6541_SWITCH_02A] ) {
			MapAnime("EVENT_gim02", "open1" )
			SetChrWork("look01", CWK_CHECKOFF, 1)
			ChangeAnimation( "look01" , "ANI_STOP2", -1 , 1 )//OFF
		} else if( FLAG[GF_MP6541_SWITCH_02B] ) {
			MapAnime("EVENT_gim02", "open1" )
			SetChrWork("look02", CWK_CHECKOFF, 1)
			ChangeAnimation( "look02" , "ANI_STOP2", -1 , 1 )//OFF
		}
		
		// 回数制限扉
		if( FLAG[TF_MP6541_DOOR_CLOSE_LV]==0 ){
			MapAnime( "@gate_02" , "open" )
			
		} else if( FLAG[TF_MP6541_DOOR_CLOSE_LV]==1 ){
			MapAnime( "@gate_02" , "close_Lv1" )
			MapAnime( "@gate02_lumi1" , "on" )
		} else if( FLAG[TF_MP6541_DOOR_CLOSE_LV]==2 ){
			MapAnime( "@gate_02" , "close_Lv2" )
			MapAnime( "@gate02_lumi1" , "on" )
			MapAnime( "@gate02_lumi2" , "on" )
		} else if( FLAG[TF_MP6541_DOOR_CLOSE_LV]==3 ){
			MapAnime( "@gate_02" , "close_Lv3" )
			MapAnime( "@gate02_lumi1" , "on" )
			MapAnime( "@gate02_lumi2" , "on" )
			MapAnime( "@gate02_lumi3" , "on" )
		} else {
			MapAnime( "@gate_02" , "close" )//closed
			MapAnime( "@gate02_lumi1" , "on" )
			MapAnime( "@gate02_lumi2" , "on" )
			MapAnime( "@gate02_lumi3" , "on" )
			MapAnime( "@gate02_lumi4" , "on" )
		}

		
		// 灯火の扉
		if( FLAG[GF_MP6541_SWITCH_01] ){
			MapAnime( "@gate_01" , "open" )
			SetChrPos("bird01_01", -100000.00f, 0.00f, 0.00f)	// 彼方へ
			SetChrPos("bird01_02", -100000.00f, 0.00f, 0.00f)	// 彼方へ
			SetChrPos("bird02_01", -100000.00f, 0.00f, 0.00f)	// 彼方へ
			SetChrPos("bird02_02", -100000.00f, 0.00f, 0.00f)	// 彼方へ
			
			SetChrWork("statue01_01_1", CWK_TEMP_INT2, 0)//像1_OFF
			ChangeAnimation( "statue01_01_1" , "ANI_DEAD2", -1 , 1 )
			SetChrWork("statue01_01_2", CWK_TEMP_INT2, 0)//像1_OFF
			ChangeAnimation( "statue01_01_2" , "ANI_DEAD2", -1 , 1 )
			SetChrWork("statue02_01_3", CWK_TEMP_INT2, 0)//像1_OFF
			ChangeAnimation( "statue02_01_3" , "ANI_DEAD2", -1 , 1 )
			SetChrWork("statue02_01_4", CWK_TEMP_INT2, 0)//像1_OFF
			ChangeAnimation( "statue02_01_4" , "ANI_DEAD2", -1 , 1 )

		} else {
			SetChrWork("bird01_01", CWK_TEMP_FLOAT9, 1.0f)//ゾーン別の速度倍率
			SetChrWork("bird01_02", CWK_TEMP_FLOAT9, 1.0f)//ゾーン別の速度倍率
			SetChrWork("bird02_01", CWK_TEMP_FLOAT9, 1.0f)//ゾーン別の速度倍率
			SetChrWork("bird02_02", CWK_TEMP_FLOAT9, 1.0f)//ゾーン別の速度倍率
			
			MapAnime( "@gate_01" , "close" )
			// 鳥状態
			ChangeAnimation( "bird01_01" , "ANI_UNI3", -1 , 1 )
			ChangeAnimation( "bird01_02" , "ANI_UNI3", -1 , 1 )
			ChangeAnimation( "bird02_01" , "ANI_UNI3", -1 , 1 )
			ChangeAnimation( "bird02_02" , "ANI_UNI3", -1 , 1 )
			// 起動
			SetChrWork("bird01_01", CWK_TEMP_INT5, 1)
			SetChrWork("bird01_02", CWK_TEMP_INT5, 1)
			SetChrWork("bird02_01", CWK_TEMP_INT5, 1)
			SetChrWork("bird02_02", CWK_TEMP_INT5, 1)
			ChangeAnimation( "statue01_01_1" , "ANI_WAIT", -1 , 1 )
			SetChrWork("statue01_01_1", CWK_TEMP_INT2, 1)//像21_ON
			ChangeAnimation( "statue01_01_2" , "ANI_WAIT", -1 , 1 )
			SetChrWork("statue01_01_2", CWK_TEMP_INT2, 1)//像22_ON
			ChangeAnimation( "statue02_01_3" , "ANI_WAIT", -1 , 1 )
			SetChrWork("statue02_01_3", CWK_TEMP_INT2, 1)//像22_ON
			ChangeAnimation( "statue02_01_4" , "ANI_WAIT", -1 , 1 )
			SetChrWork("statue02_01_4", CWK_TEMP_INT2, 1)//像22_ON
		}
					
	//}
	
}

//////////////////////////////////////////////////////////////////////
//■アクティブボイス
//////////////////////////////////////////////////////////////////////
function "act_1803"
{
	if (!FLAG[GF_AVOICE_1803])
	{
		if( FLAG[GF_MP6541_SWITCH_02] ) {	//凍結トラップ解除？
			if(WORK[WK_PLAYER1] != DANA2) {	//グラティカ？
				EventAreaEnable( "evb2_act_1803" , 0 )
				ActiveVoiceStop(ACTIVEVOICESTOP_WINDOWOFF)
				ActiveVoiceStart(EACT_EVID_1803, 1, 0)	//はじめて風エリアで押し戻された
			}
		}
	}
}

//////////////////////////////////////////////////////////////////////
//■配置制御セクション
//////////////////////////////////////////////////////////////////////
function "NpcPosition"
{
	//if( FLAG[GF_SPEEDRUN_SKILL_HUMMEL] &&	// やり込みスキル習得：⑤▼ヒュンメルＶＳマスターコングを勝利した
	//	!FLAG[GF_SPEEDRUN_SKILL_ADOL] )		// やり込みスキル習得：⑥▼アドルＶＳマスターコングを勝利した
	//{
	//}
}

//////////////////////////////////////////////////////////////////////
//■メインイベント
//////////////////////////////////////////////////////////////////////

function "SubEV_Past_05_SpiritI"
{
	//開始処理ここから-----------------------------------------------

	CallFunc("system:event_begin")


	//イベント開始前情報の保存
	SaveEventState()
	SaveCamera()

	//パーティ状態のリセット
	CallFunc("system:party_reset")

	//環境の初期化・不要なものを隠す
	ClearDebris()
	ResetChrPos((CHRTYPE_MONS | REMOVE_POS))
	//ResetChrPos((CHRTYPE_NPC | REMOVE_POS))

	//キャラ初期状態の設定				
	SetChrWork("DANA", CWK_DEFAULT_SKIPNODE_OFF, 1)
	SetChrInfoFlag("DANA", INFOFLAG_NOCHRATARI)
	SetChrPos("DANA",-151.97f,19.16f,0.00f)
	Turn("DANA",-1.22f,360.0f)
	ChangeAnimation("DANA", "ANI_WAIT", -1, 1)
	ChangeSubAnimation("DANA", SUBMOT_EYE, ANI_E_WAIT, 1)
	ChangeSubAnimation("DANA", SUBMOT_MOUTH, ANI_M_WAIT, 1)
	ChangeSubAnimation("DANA", SUBMOT_EXT1, ANI_E_LOOKC, 1)
	ChangeSubAnimation("DANA",SUBMOT_EXT2,ANI_SIGN_HIDE,1)

	//カメラ設定
	MoveCameraAt( 0 , -151.958f , 17.356f , 1.500f , 0 )	// 注視点
	ChangeCameraDistance( 0 , 5.130f , 0 )		// 基本距離
	ChangeCameraElevation( 0 , -3.945f , 0 )	// 基本仰角
	RotateCamera( 0 , 208.237f , 0 )				// 角度
	ChangeCameraPers( 0 , 40.000f , 0 )			// 視野角
	SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
	RollCamera( 0 , 0.0f , 0 )				// ロール回転

	// 被写界深度の設定
	SetDoF(0, LERP_LINEAR, 3.000, 70.000, 2.000, 0.950, 0.500)					//イベント毎に調整
	SetDoFFocus(0,0,0)
	
	// グレアの設定
	SetGlare(0, LERP_LINEAR, 0.700, 1.300, 1.000, 1.000, 0.600, 0.000, 1.000)	//イベント毎に調整

	//スキップ許可
	SetSkipScript("mp6542m:SubEV_Past_05_SpiritI_ED")

	//開始処理ここまで-----------------------------------------------

	FadeBGM(70,30)
	PlaySE(SE_SPIRIT_SAVE_01, 80, 1, 500, 0, 1.0f, 0)

	FadeIn(FADE_BLACK, FADE_FAST)
	WaitFade()
	//　　地下聖堂フロア４に光る渦がある。
	//　　調べるとイベント起動。
	//選択肢
	SetFlag(TF_MENU_SELECT,0)
	MenuReset()
	MenuType(MENUTYPE_POPUP)
	MenuAdd(1,"淀みを開放する")
	MenuAdd(2,"やめておく")
	MenuOpen( TF_MENU_SELECT , -1 , ADOLMENU_PPOSY , -2 , -2 , 10 , 1)
	WaitMenu(0)
	MenuClose(10,0)

	if(FLAG[TF_MENU_SELECT] == 1)
	{
		//────────────────────
		//	⇒淀みを開放する
		//　　下の流れに接続。
		//	⇒やめておく
		//　　操作許可を戻す。
		//────────────────────
		//　　ダーナは指先に理力を纏わせて、光る渦にそっと触れる。
		//　　すると光る渦ははじけて消滅し、
		//　　中から小さな精霊が現れる。

		//精霊飛び出す演出
		ChangeAnimation( "DANA" , "ANI_EV_SPIRIT_S", -1 , 1 )
		Wait(15)
		PlaySE(SE_SPIRIT_SAVE_02, 60, 1, 500, 0, 1.0f, 0)
		WaitAnimation2( "DANA" , -1, 1, "ANI_EV_SPIRIT_S",  0)

		ChangeAnimation( "DANA" , "ANI_EV_SPIRIT_E", -1 , 1 )
		StopEffect(106720,ALL,1)
		StopSE(SE_SPIRIT_SAVE_02, 3000)

		CrossFade(15)
		ChangeAnimation( "SubEV_Past_05_SpiritI" , "ANI_RELEASE", -1 , 1 )
		Wait(90)
		StopSE(SE_SPIRIT_SAVE_01, 1000)
		PlaySE(SE_SPIRIT_SAVE_03, 100, 0, 0, 0, 1.0f, 0)
		
		WaitAnimation2( "SubEV_Past_05_SpiritI" , -1, 1, "ANI_RELEASE",  0)

		Wait(15)
		SetChrPos("Kushna",-151.97f,16.14f,0.00f)
		ChangeAnimation( "Kushna" , "ANI_EV_ESCAPE", -1 , 1 )
		Blur(BLUR_TYPE_EXPAND, 0.4f , 10)
		EarthQuake(0.15, 0.15 , 10)
		PlaySE(SE_SPIRIT_SAVE_04, 80, 0, 0, 0, 1.0f, 0)
		Wait(7)
		ChangeAnimation( "DANA" , "ANI_EV_SUP_S", -1 , 1 )
		Wait(50)

		SetName("精霊")
		//	精霊
		TalkPopup("Kushna",0,2,0,0,0)
		{
			"……出られたのか……？\p"
			"しかしなぜ突然……"
			"外から助力があったようだが……"
		}
		WaitPrompt()
		WaitCloseWindow()
		SetName("")

		ChangeAnimation( "DANA" , "ANI_EV_SUP_E", -1 , 1 )

		//	"DANA"
		TalkPopup("DANA",0,1,0,0,0)
		{
			"#000e#000mこんにちは、私はダーナ。"
			"とにかく無事でよかった。"
		}
		WaitPrompt()
		WaitCloseWindow()

		//　　精霊に！！エモーション。
		EmotionEx("Kushna", 0.00f,EMO_EX2,0,5,1,1,1.0f )
		Wait(40)
		
		ChangeAnimation( "Kushna" , "ANI_EV_YES", -1 , 1 )
		
		//　　慌てる。
		//	精霊
		SetName("精霊")
		TalkPopup("Kushna",0,2,0,0,0)
		{
			"ム！？　……そ、そなた……\p"
			"そうか、人とかいう存在だな？"
			"初めて見るぞ……\p"
			"私は常闇の精霊……"
			"名をクシュナという……"
		}
		WaitPrompt()
		WaitCloseWindow()
		SetName("")

		//	常闇の精霊クシュナ
		TalkPopup("Kushna",0,2,0,0,0)
		{
			"生まれ出でし時より、"
			"ずっと闇の中で過ごしてきた……\p"
			"他者との邂逅するのは"
			"これが初めてだ……"
		}
		WaitPrompt()
		WaitCloseWindow()
		
		ChangeAnimation( "DANA" , "ANI_EV_WAIT2_S", -1 , 1 )

		//	"DANA"
		TalkPopup("DANA",0,1,0,0,0)
		{
			"#000e#000mそ、そうなんだ。"
			"ずっとこの地下聖堂に……？"
		}
		WaitPrompt()
		WaitCloseWindow()

		//	常闇の精霊クシュナ
		TalkPopup("Kushna",0,2,0,0,0)
		{
			"いや、ここよりもはるか下方……"
			"地脈の下にある常闇の世界だ……\p"
			"そこから妙な力によって、"
			"この地表付近に引き寄せられたのだ。\p"
			"地脈の流れも異常を極めていた……"
			"これは災いの前兆としか……ぶつぶつ……"
		}
		WaitPrompt()
		WaitCloseWindow()

		//　　クシュナにＰＡエモーション。
		EmotionEx("DANA", 0.00f,EMO_PA,0,5,1,1,1.0f )
		Wait(35)
		
		//	常闇の精霊クシュナ
		TalkPopup("Kushna",0,2,0,0,0)
		{
			"す、すまない。"
			"あなたの存在を忘れていた。\p"
			"私は考える事が好きでな……"
			"つい周りが見えなくなるのだ……"
		}
		WaitPrompt()
		WaitCloseWindow()
	
		HeadNo("DANA" ,1 , 30 )
		ChangeAnimation( "DANA" , "ANI_EV_WAIT2_E", -1 , 1 )

		//	"DANA"
		TalkPopup("DANA",0,1,0,0,0)
		{
			"#000e#000mあはは……気にしないで。"
		}
		WaitPrompt()
		WaitCloseWindow()

		ChangeSubAnimation("DANA",SUBMOT_EYE,ANI_E_CLOSE,1)

		CrossFade(FADE_CROSS)
		MoveCameraAt( 0 , -151.973f , 18.953f , 1.450f , 0 )	// 注視点
		ChangeCameraDistance( 0 , 1.820f , 0 )		// 基本距離
		ChangeCameraElevation( 0 , -6.167f , 0 )	// 基本仰角
		RotateCamera( 0 , 315.277f , 0 )				// 角度
		ChangeCameraPers( 0 , 40.000f , 0 )			// 視野角
		SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
		RollCamera( 0 , 0.0f , 0 )				// ロール回転

		Wait(FADE_CROSS)

		//────────────────────
		//	⇒オリヴィスを救出している
		if(FLAG[GF_SUBEV_PAST_SPIRITH])
		{
			TalkPopup("DANA",0,2,0,0,0)
			{
				"#0L#000m（この地に引き寄せられた？"
				"　精霊オリヴィスと同じだね。）"
			}
			WaitPrompt()
			WaitCloseWindow()
			
			TalkPopup("DANA",0,2,0,0,0)
			{
				"#0L#012e（一体何が起きているんだろう……）"
			}
			WaitPrompt()
			WaitCloseWindow()
		}
		//	⇒それ以外
		else
		{
			TalkPopup("DANA",0,2,0,0,0)
			{
				"#0L#000m（精霊にも異変が起きてるみたいだね……"
				"  詳しくは分からないけど……）"
			}
			WaitPrompt()
			WaitCloseWindow()

			ChangeSubAnimation("DANA",SUBMOT_EYE,ANI_E_CLOSE_E,1)
			Wait(15)
		}
		//────────────────────

		WaitAnimation2( "DANA" , -1, 1, "ANI_EV_WAIT2_E",  0)
		ChangeAnimation( "DANA" , "ANI_EV_TEBURI", -1 , 1 )

		TalkPopup("DANA",0,2,0,0,0)
		{
			"#000e#000mとにかく今は色々と危険な状況で、"
			"一人にならない方がいいかも。\p"
			"#091e#080mもう少し上層にいけば"
			"他の精霊たちに会えると思うよ。\p"
			"#092eどうか気をつけてね。"
		}
		WaitPrompt()
		WaitCloseWindow()

		CrossFade(FADE_CROSS)
		MoveCameraAt( 0 , -152.123f , 16.837f , 1.277f , 0 )	// 注視点
		ChangeCameraDistance( 0 , 3.110f , 0 )		// 基本距離
		ChangeCameraElevation( 0 , -3.056f , 0 )	// 基本仰角
		RotateCamera( 0 , 334.588f , 0 )				// 角度
		ChangeCameraPers( 0 , 40.000f , 0 )			// 視野角
		SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
		RollCamera( 0 , 0.0f , 0 )				// ロール回転

		Wait(FADE_CROSS)

		//	常闇の精霊クシュナ
		TalkPopup("Kushna",0,1,0,0,0)
		{
			"……………………\p"
			"あなたの輝きは"
			"闇の私にも心地がいい……\p"
			"何より初めて私に声を掛けてくれた……"
			"私はあなたの力となりたい……"
		}
		WaitPrompt()
		WaitCloseWindow()

		//	常闇の精霊クシュナ
		TalkPopup("Kushna",0,1,0,0,0)
		{
			"我が力の一端をここに宿そう。"
			"さあ受け取るがいい、ダーナ。\p"
			"あなたの光は私の闇を強めるだろう。"
		}
		WaitPrompt()
		WaitCloseWindow()

		//	アイテム入手テキスト
		ChangeSubAnimation("DANA",SUBMOT_EYE,ANI_E_SMILE_E,1)

		ChangeAnimation( "DANA" , "ANI_EV_TEWATASI_S", -1 , 1 )
		WaitAnimation2( "DANA" , -1, 1, "ANI_EV_TEWATASI_S",  0)

		PlaySE(SE_SPIRIT_SAVE_06, 70, 0, 500, 0, 1.0f, 0)
		ChangeAnimation( "Kushna" , "ANI_EV_JUMP", -1 , 1 )
		WaitAnimation2( "Kushna" , -1, 1, "ANI_EV_JUMP",  0)
		Wait(35)
		
		GetItemMessageExPlus(ICON3D_AC_066, 1 , ITEMMSG_SE_JINGLE, "を手に入れた！", 0, 0)
		WaitPrompt()
		WaitCloseWindow()

		FadeBGM(70,20)

		//	"DANA"
		TalkPopup("DANA",0,2,0,0,0)
		{
			"#012e#000mこれは……なんて深い闇なんだろう。\p"
			"#011e……うん、でも相克する力が"
			"調和して高め合っているみたい。\p"
			"#092e#080mありがとう、クシュナ。"
			"大切に使わせてもらうから。"
		}
		WaitPrompt()
		WaitCloseWindow()

		ChangeAnimation( "DANA" , "ANI_EV_TEWATASI_E", -1 , 1 )

		ChangeAnimation( "Kushna" , "ANI_EV_YES", -1 , 1 )

		//	常闇の精霊クシュナ
		TalkPopup("Kushna",0,1,0,0,0)
		{
			"い、いや、礼には及ばない……\p"
			"あなたの忠告に従い"
			"私は上へと向かってみよう。\p"
			"たまには他者と関わるのも"
			"悪くないようだから……"
		}
		WaitPrompt()
		WaitCloseWindow()

		//　　精霊、行ってしまう。
		ChangeAnimation( "Kushna" , "ANI_EV_LEAVE", -1 , 1 )
		
		Wait(30)
		PlaySE(SE_SPIRIT_SAVE_07, 80, 0, 0, 0, 1.0f, 0)
		Wait(30)
		
		Look("DANA" , 0 ,13)
		
		Wait(40)

		TalkPopup("DANA",0,2,0,0,0)
		{
			"#011e#080m……今はただ、あなたを"
			"助ける事ができてよかった。"
		}
		WaitPrompt()
		WaitCloseWindow()

		LookReset("DANA")

		TalkPopup("DANA",0,2,0,0,0)
		{
			"#012e#000mさて、私は前へ進まなきゃ。"
		}
		WaitPrompt()
		WaitCloseWindow()

		//　　画面暗転。

		FadeOut(FADE_BLACK,FADE_NORMAL)
		WaitFade()

		//　　画面暗転。
		PlaySE(SE_QUEST_END, 100, 0, 0, 0, 1.0f, 0)		// クエスト達成	

		//	システムテキスト
		TalkPopup(UNDEF,0,5,0,0,0)
		{
			"#8S"
			"#-1W#4C常闇の精霊クシュナを救出した！#10W" 
			"#8S"
		}
		Wait(10)
		CallFunc("system:QuestVoice_Success")
		WaitPrompt()
		WaitCloseWindow()

		PlaySE(SE_VIRTUE, 100, 0, 0, 0, 1.0f, 0)	//徳ポイントアップ

		//	システムテキスト
		TalkPopup(UNDEF,0,5,0,0,0)
		{
			"#8S"
			"#-1W#4Cダーナの徳が上昇した。#10W"
			"#8S"
		}
		Wait(10)
		WaitPrompt()
		WaitCloseWindow()

		//　　徳ポイントを+5する。
		//　　イベント終了、操作許可を戻す。
	}

	StopSE(SE_SPIRIT_SAVE_01, 1000)

	// フェードアウト
	FadeOut(FADE_BLACK, FADE_FAST)
	WaitFade()

	//終了処理ここから----------------------------------------------------
	CallFunc("mp6542m:SubEV_Past_05_SpiritI_ED")
}

function "SubEV_Past_05_SpiritI_ED"
{
	//終了処理はスキップ禁止
	SetSkipScript("")

	//イベント前のキャラ情報を復帰
	RestoreEventState()

	//隠したものを復帰。
	ResetChrPos((CHRTYPE_MONS | RESET_POS | RESET_AISTATE))

	//キャラモーション初期化
	CallFunc("system:reset_chrmot_DANA")

	//パーティキャラを解放
	ReleaseEventPartyChr()

	//マップパラメーターリセット
	ResetMapParam(-1)

	SetChrPos("Kushna",-100000.00f,0.00f,0.00f)
	//SetChrPos("SubEV_Past_05_SpiritI",-100000.00f,0.00f,0.00f) 	// 2017.12.18 m.arai 座標を飛ばすと再度話しかけられなくなる為無効に
	
	if(FLAG[TF_MENU_SELECT] == 1)
	{

		SetFlag(GF_SUBEV_PAST_SPIRITI,1)		//クシュナ救出
		SetFlag(GF_TROPHY_ETERNIASPIRIT_09,1)		//精霊救出率カウント

		GetItem(ICON3D_AC_066,1)		//無間の闇玉

		SetFlag(GF_VIRTURE_POINT,(FLAG[GF_VIRTURE_POINT] + 5 ))			//徳ポイント加算
		EventCue("system:EV_FloorOpen")			//扉が開く予知を視る キューを入れる

		CallFunc("system:Get_DanaSpirit")		//「全てのエタニアの精霊を救出した。」トロフィー判定用

		CallFunc("system:SetMarkerDANA")
		CallFunc("mp6542m:init")
	}

	//イベント後の再配置
	SetChrPos("LEADER",-151.97f,19.16f,0.00f)
	Turn("LEADER",-1.22f,360.0f)
	ResetPartyPos()
	ResetFollowPoint()
	//Wait(1) //処理待ち用

	//カメラ位置復帰
	MoveCameraAt( 0 , -151.967f , 19.159f , 1.847f , 0 )	// 注視点
	ChangeCameraDistance( 0 , 7.000f , 0 )		// 基本距離
	ChangeCameraElevation( 0 , 6.428f , 0 )	// 基本仰角
	RotateCamera( 0 , -146.692f , 0 )				// 角度
	ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
	SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
	RollCamera( 0 , 0.0f , 0 )				// ロール回転
	CallFunc("system:camera_reset")

	ResetStopFlag(STOPFLAG_EVENT)

	FadeIn(FADE_BLACK, FADE_FAST)
	//WaitFade()

	//終了処理ここまで----------------------------------------------------

}



//////////////////////////////////////////////////////////////////////
//■サブイベントセクション
//////////////////////////////////////////////////////////////////////

//-------------------------------------------
function "switch_01_01"
{
	if (statue01_01_1.CHRWORK[CWK_TEMP_INT2]) {
		// 灯火が消える
		SetChrWork("statue01_01_1", CWK_TEMP_INT2, 0)//像1_OFF
		MapAnime( "gate01_lumi1" , "off-on" )//像光1_ON
		MapAnimeLast("gate01_lumi1", "on" )
		
		PlaySE( SE_GIM_PAST_STATUE_OFF , 100 , 0,  0, 0, 1.0f, 0)
		
		CallFunc("mp6542m:switch_01_check")// 像をチェック
	}
}
function "switch_01_02"
{
	if (statue01_01_2.CHRWORK[CWK_TEMP_INT2]) {
		// 灯火が消える
		SetChrWork("statue01_01_2", CWK_TEMP_INT2, 0)//像1_OFF
		MapAnime( "gate01_lumi2" , "off-on" )//像光1_ON
		MapAnimeLast("gate01_lumi2", "on" )
		
		PlaySE( SE_GIM_PAST_STATUE_OFF , 100 , 0,  0, 0, 1.0f, 0)
		
		CallFunc("mp6542m:switch_01_check")// 像をチェック
	}
}
function "switch_01_03"
{
	if (statue02_01_3.CHRWORK[CWK_TEMP_INT2]) {
		// 灯火が消える
		SetChrWork("statue02_01_3", CWK_TEMP_INT2, 0)//像1_OFF
		MapAnime( "gate01_lumi3" , "off-on" )//像光1_ON
		MapAnimeLast("gate01_lumi3", "on" )
		
		PlaySE( SE_GIM_PAST_STATUE_OFF , 100 , 0,  0, 0, 1.0f, 0)
		
		CallFunc("mp6542m:switch_01_check")// 像をチェック
	}
}
function "switch_01_04"
{
	if (statue02_01_4.CHRWORK[CWK_TEMP_INT2]) {
		// 灯火が消える
		SetChrWork("statue02_01_4", CWK_TEMP_INT2, 0)//像1_OFF
		MapAnime( "gate01_lumi4" , "off-on" )//像光1_ON
		MapAnimeLast("gate01_lumi4", "on" )
		
		PlaySE( SE_GIM_PAST_STATUE_OFF , 100 , 0,  0, 0, 1.0f, 0)
		
		CallFunc("mp6542m:switch_01_check")// 像をチェック
	}
}
function "switch_01_check"
{
	SetFlag(TF_MP6541_NO_FIRE_COUNT, 0)	// 鎮火カウント　リセット
	if (statue01_01_1.CHRWORK[CWK_TEMP_INT2]==0) {
		SetFlag(TF_MP6541_NO_FIRE_COUNT, (FLAG[TF_MP6541_NO_FIRE_COUNT] + 1))	// 鎮火カウント
	}
	if (statue01_01_2.CHRWORK[CWK_TEMP_INT2]==0) {
		SetFlag(TF_MP6541_NO_FIRE_COUNT, (FLAG[TF_MP6541_NO_FIRE_COUNT] + 1))	// 鎮火カウント
	}
	if (statue02_01_3.CHRWORK[CWK_TEMP_INT2]==0) {
		SetFlag(TF_MP6541_NO_FIRE_COUNT, (FLAG[TF_MP6541_NO_FIRE_COUNT] + 1))	// 鎮火カウント
	}
	if (statue02_01_4.CHRWORK[CWK_TEMP_INT2]==0) {
		SetFlag(TF_MP6541_NO_FIRE_COUNT, (FLAG[TF_MP6541_NO_FIRE_COUNT] + 1))	// 鎮火カウント
	}
	if (FLAG[TF_MP6541_NO_FIRE_COUNT] >= 4) {
		// 扉を開く
		EventCue("mp6542m:switch_01_open")
	}
}


function "switch_01_open"
{
	//短いものはイベントスキップ不要とのこと

	//叩いた直後のウエイト----------------------------------------------------
	SetStopFlag(STOPFLAG_SIMPLEEVENT2)		// LP操作、ストッパーなどのシンプルイベント
	SetStopFlag(STOPFLAG_SKIPOK)		// ×ボタンスキップを許可する

	// 一時的にプレイヤー無敵
	SetChrWork(PLAYER1, CWK_MUTEKITIME, 90)
	SetChrWork(PLAYER2, CWK_MUTEKITIME, 90)
	SetChrWork(PLAYER3, CWK_MUTEKITIME, 90)
	SetChrWork(PLAYER4, CWK_MUTEKITIME, 90)
	if( LEADER.CHRWORK[CWK_YUKA] ) {
		ChangeAnimation( "LEADER" , "ANI_WAIT", -1 , 1 )
	}
	Wait(10)

	//開始処理ここから----------------------------------------------------
	FadeOut(FADE_BLACK,FADE_FAST)
	WaitFade()
	MapAnime( "gate01_lumi1" , "on" )
	MapAnime( "gate01_lumi2" , "on" )
	MapAnime( "gate01_lumi3" , "on" )
	MapAnime( "gate01_lumi4" , "on" )

	//イベント開始前情報の保存
	SaveEventState()
	SaveCamera()

	//パーティ状態のリセット
	CallFunc("system:party_reset_nopos")

	//環境の初期化・不要なものを隠す
	ClearDebris()
	ResetChrPos((CHRTYPE_MONS | REMOVE_POS))
//	ResetChrPos((CHRTYPE_NPC | REMOVE_POS))
	SetChrWork("bird01_01", CWK_TEMP_INT5, 0)
	SetChrWork("bird01_02", CWK_TEMP_INT5, 0)
	SetChrWork("bird02_01", CWK_TEMP_INT5, 0)
	SetChrWork("bird02_02", CWK_TEMP_INT5, 0)

	//カメラ設定
MoveCameraAt( 0 , 152.158f , 83.846f , 4.647f , 0 )	// 注視点
ChangeCameraDistance( 0 , 18.900f , 0 )		// 基本距離
ChangeCameraElevation( 0 , 6.782f , 0 )	// 基本仰角
RotateCamera( 0 , 270.0f , 0 )				// 角度
ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
RollCamera( 0 , 0.0f , 0 )				// ロール回転
// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

	// 被写界深度の設定
	SetDoF(0, LERP_LINEAR, 2.000, 50.000, 1.000, 0.700, 0.500)
	// グレアの設定
	SetGlare(0, LERP_LINEAR, 0.700, 1.300, 1.000, 1.000, 0.600, 0.000, 1.000)

	FadeIn(FADE_BLACK, FADE_FAST)
	WaitFade()

	// 扉見せる
	PlaySE(SE_GIM_PAST_DOOR_PRE, 100, 0, 0, 0, 1.0f, 0)
	MapAnime( "gate01_lumi1" , "on-off" )
	MapAnimeLast("gate01_lumi1"       , "off" )
	MapAnime( "gate01_lumi2" , "on-off" )
	MapAnimeLast("gate01_lumi2"       , "off" )
	MapAnime( "gate01_lumi3" , "on-off" )
	MapAnimeLast("gate01_lumi3"       , "off" )
	MapAnime( "gate01_lumi4" , "on-off" )
	MapAnimeLast("gate01_lumi4"       , "off" )
	Wait(40)

	// 扉開く
	PlaySE(SE_GIM_PAST_DOOR, 100, 1, 0, 0, 1.0f, 0)
	MapAnime( "@gate_01" , "close-open" )
	MapAnimeLast("@gate_01"       , "open" )
	Wait(45)
	EarthQuake(0.1f,0.1f,10)
	PlaySE(SE_GIM_PAST_DOOR_STOP, 100, 0, 0, 0, 1.0f, 0)
	StopSE(SE_GIM_PAST_DOOR, 200)
	Wait(30)

	FadeOut(FADE_BLACK, FADE_FAST)
	WaitFade()

	//　　操作許可を戻す。

	//終了処理ここから----------------------------------------------------
	//イベント前のキャラ情報を復帰
	RestoreEventState()

	//隠したものを復帰。
	ResetChrPos((CHRTYPE_MONS | RESET_POS | RESET_AISTATE))
	SetChrPos("bird01_01", -100000.00f, 0.00f, 0.00f)	// 彼方へ
	SetChrPos("bird01_02", -100000.00f, 0.00f, 0.00f)	// 彼方へ
	SetChrPos("bird02_01", -100000.00f, 0.00f, 0.00f)	// 彼方へ
	SetChrPos("bird02_02", -100000.00f, 0.00f, 0.00f)	// 彼方へ

	//キャラモーション初期化
	CallFunc("system:reset_chrmot_ALL_nopos")

	//パーティキャラを解放
	ReleaseEventPartyChr()

	//マップパラメーターリセット
	ResetMapParam(-1)

	//エフェクトの停止
	StopEffect(-1, ALL, 1)

	//フラグ処理
	SetFlag(GF_MP6541_SWITCH_01, 1)

	//イベント後の再配置

	//カメラ位置復帰
	RestoreCamera(0, 0)		//※上記カメラ位置を指定する場合は不要
	CallFunc("system:camera_reset")

	ResetStopFlag(STOPFLAG_SKIPOK)
	ResetStopFlag(STOPFLAG_SIMPLEEVENT2)
	FadeIn(FADE_BLACK,FADE_FAST)
	//WaitFade()
}


function "talk_reset02"
{
	SetStopFlag(STOPFLAG_SIMPLEEVENT2)		// LP操作、ストッパーなどのシンプルイベント
	SetStopFlag(STOPFLAG_SKIPOK)		// ×ボタンスキップを許可する

	ResetMotion( "ALL" , 1 )
	StopEffect(-1,ALL,1)
	StopEmotion( "ALL" )
	TurnToChr("LEADER", "this", 60.0f)
	ExecuteCmd( 1 , TurnToChr("PLAYER2","PLAYER1",60.0f) )
	ExecuteCmd( 1 , TurnToChr("PLAYER3","PLAYER1",60.0f) )
	SetChrInfoFlag( "PLAYER1" , INFOFLAG_FIXED )
	SetChrInfoFlag( "PLAYER2" , INFOFLAG_FIXED )
	SetChrInfoFlag( "PLAYER3" , INFOFLAG_FIXED )
	SetChrInfoFlag( "PLAYER1" , INFOFLAG_NOATARI )
	SetChrInfoFlag( "PLAYER2" , INFOFLAG_NOATARI )
	SetChrInfoFlag( "PLAYER3" , INFOFLAG_NOATARI )
	Wait(15)
	
	SetFlag(TF_MENU_SELECT2, 2)
	CallFunc("mp6542m:talk_reset_common")	

	ResetStopFlag(STOPFLAG_SKIPOK)
	ResetStopFlag(STOPFLAG_SIMPLEEVENT2)
}

function "talk_reset_common"
{
	TalkPopup(UNDEF,0,3,SYSTEM_PPOSX,SYSTEM_PPOSY,0)
	{
		"#7C復元を望む者は此処に理を示せ"
		"復元2行目"
	}
	WaitPrompt()
	WaitCloseWindow()
		
	//選択肢
	SetFlag(TF_MENU_SELECT,0)
	MenuReset()
	MenuType(MENUTYPE_POPUP)
	MenuAdd(0,"理力を込める")
	MenuAdd(1,"やめる")
	MenuOpen( TF_MENU_SELECT , -1 , SYSTEM_PPOSY , -2 , -2 , 10 , 1)
	WaitMenu(0)
	MenuClose(10,0)
	
	// 押す
	if( 0==FLAG[TF_MENU_SELECT] ){
		FadeOut(FADE_BLACK,FADE_FAST)
		WaitFade()
		
		// 回数制限扉エリア
		SetFlag(TF_MP6541_DOOR_CLOSE_LV, 0)
		MapAnime( "@gate_02" , "open" )
		MapAnime( "@gate02_lumi1" , "off" )
		MapAnime( "@gate02_lumi2" , "off" )
		MapAnime( "@gate02_lumi3" , "off" )
		MapAnime( "@gate02_lumi4" , "off" )
			
		SetChrWork(gim_rockmgr, CWK_TEMP_INT0, FLAG[TF_MENU_SELECT2])// 指定グループをリセット
		PlaySE(SE_GIM_PAST_POWER, 100, 0, 0, 0, 1.0f, 0)
		Wait(15)
		PlaySE( SE_GIM_PAST_ROCK_RESET , 100 , 0,  0, 0, 1.0f, 0)
		Wait(25)
		FadeIn(FADE_BLACK,FADE_FAST)
		WaitFade()
		
		Wait(15)
		
		PlaySE(SE_TUTORIAL, 100, 0, 0, 0, 1.0f, 0)		//チュートリアル
		
		TalkPopup(UNDEF,0,5,0,0,0)
		{
			"#8S"
			"#-1W#4C封石の位置が初期状態に戻った！#10W"
			"封石2行目"
			"#8S"
		}
		Wait(10)
		WaitPrompt()
		WaitCloseWindow()
				
	} else {
		ResetChrInfoFlag( "PLAYER1" , INFOFLAG_FIXED )
		ResetChrInfoFlag( "PLAYER2" , INFOFLAG_FIXED )
		ResetChrInfoFlag( "PLAYER3" , INFOFLAG_FIXED )
		ResetChrInfoFlag( "PLAYER1" , INFOFLAG_NOATARI )
		ResetChrInfoFlag( "PLAYER2" , INFOFLAG_NOATARI )
		ResetChrInfoFlag( "PLAYER3" , INFOFLAG_NOATARI )
	}
}

function "talk_switch02"
{
	SetStopFlag(STOPFLAG_SIMPLEEVENT2)		// LP操作、ストッパーなどのシンプルイベント
	SetStopFlag(STOPFLAG_SKIPOK)		// ×ボタンスキップを許可する

	ResetMotion( "ALL" , 1 )
	StopEffect(-1,ALL,1)
	StopEmotion( "ALL" )
	TurnToChr("LEADER", "this", 60.0f)
	ExecuteCmd( 1 , TurnToChr("PLAYER2","PLAYER1",60.0f) )
	ExecuteCmd( 1 , TurnToChr("PLAYER3","PLAYER1",60.0f) )
	SetChrInfoFlag( "PLAYER1" , INFOFLAG_FIXED )
	SetChrInfoFlag( "PLAYER2" , INFOFLAG_FIXED )
	SetChrInfoFlag( "PLAYER3" , INFOFLAG_FIXED )
	SetChrInfoFlag( "PLAYER1" , INFOFLAG_NOATARI )
	SetChrInfoFlag( "PLAYER2" , INFOFLAG_NOATARI )
	SetChrInfoFlag( "PLAYER3" , INFOFLAG_NOATARI )
	Wait(15)
	
	TalkPopup(UNDEF,0,3,SYSTEM_PPOSX,SYSTEM_PPOSY,0)
	{
		"#7C凍れる心を善しとせぬ者よ"
		"#7C　 此処にその理を示せ 　"
	}
	WaitPrompt()
	WaitCloseWindow()
		
	//選択肢
	SetFlag(TF_MENU_SELECT,0)
	MenuReset()
	MenuType(MENUTYPE_POPUP)
	MenuAdd(0,"理力を込める")
	MenuAdd(1,"やめる")
	MenuOpen( TF_MENU_SELECT , -1 , SYSTEM_PPOSY , -2 , -2 , 10 , 1)
	WaitMenu(0)
	MenuClose(10,0)
	
	// 押す
	if( 0==FLAG[TF_MENU_SELECT] ){
		//開始処理ここから----------------------------------------------------
		FadeOut(FADE_BLACK,FADE_FAST)
		WaitFade()
		
		//イベント開始前情報の保存
		SaveEventState()
		SaveCamera()

		//パーティ状態のリセット
		CallFunc("system:party_reset_nopos")
	
		//カメラ設定
		MoveCameraAt( 0 , 3.190f , 86.022f , 11.365f , 0 )	// 注視点
		ChangeCameraDistance( 0 , 32.700f , 0 )		// 基本距離
		ChangeCameraElevation( 0 , 23.428f , 0 )	// 基本仰角
		RotateCamera( 0 , 316.109f , 0 )				// 角度
		ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
		SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
		RollCamera( 0 , 0.0f , 0 )				// ロール回転
		// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

		// 被写界深度の設定
		SetDoF(0, LERP_LINEAR, 2.000, 60.000, 1.000, 0.700, 0.500)
		// グレアの設定
		SetGlare(0, LERP_LINEAR, 0.700, 1.300, 1.000, 1.000, 0.600, 0.000, 1.000)
	
		MapAnime("gim_icestatue", "off" )	
		MapAnimeLast( "gim_icestatue","wait2")
		
		ExecuteCmd(1000, ChangeCameraDistance, INTERPOLATE_SPHERE , 34.000f , 100 )
		FadeIn(FADE_BLACK,FADE_FAST)
		WaitFade()
		PlaySE(SE_GIM_PAST_ICE_OFF, 100, 0, 0, 0, 1.0f, 0)
		Wait(90)


		//追加でなにか消え去り系のSEがほしい・・・

		CrossFade(FADE_NORMAL)
		MapHide("pori_mist_alpha" , 0 )
	
	
		Wait(45)
	
		TalkPopup(UNDEF,0,3,SYSTEM_PPOSX,SYSTEM_PPOSY,0)
		{
			"#7C部屋全体を包む凍えるような冷気が"
			"#7C消え去っていった……"
		
		}
		WaitPrompt()
		WaitCloseWindow()

		Wait(20)
	
		FadeOut(FADE_BLACK, FADE_FAST)
		WaitFade()
		
		//　　操作許可を戻す。

		//終了処理ここから----------------------------------------------------
		//イベント前のキャラ情報を復帰
		RestoreEventState()

		//キャラモーション初期化
		CallFunc("system:reset_chrmot_ALL_nopos")

		//パーティキャラを解放
		ReleaseEventPartyChr()

		//マップパラメーターリセット
		ResetMapParam(-1)

		//エフェクトの停止
		StopEffect(-1, ALL, 1)

		//フラグ処理
		SetFlag(GF_MP6541_SWITCH_02, 1)
		SetChrWork("lookp02", CWK_CHECKOFF, 1)
		ChangeAnimation( "lookp02" , "ANI_STOP2", -1 , 1 )//OFF
		MapHide("pori_mist_alpha" , 0 )
		EventBox( 0, 0 )//氷結
		EventBox( 1, 0 )//氷結
		EventBox( 2, 0 )//氷結
		EventBox( 3, 0 )//氷結
		EventBox( 4, 0 )//氷結
		SetEnvSEPlayState(65421801,0)	//氷結地帯用 環境SE停止

		//イベント後の再配置

		//カメラ位置復帰
		RestoreCamera(0, 0)		//※上記カメラ位置を指定する場合は不要
		CallFunc("system:camera_reset")

		ResetStopFlag(STOPFLAG_SIMPLEEVENT2)
		FadeIn(FADE_BLACK,FADE_FAST)
		//WaitFade()

	} else {
		ResetChrInfoFlag( "PLAYER1" , INFOFLAG_FIXED )
		ResetChrInfoFlag( "PLAYER2" , INFOFLAG_FIXED )
		ResetChrInfoFlag( "PLAYER3" , INFOFLAG_FIXED )
		ResetChrInfoFlag( "PLAYER1" , INFOFLAG_NOATARI )
		ResetChrInfoFlag( "PLAYER2" , INFOFLAG_NOATARI )
		ResetChrInfoFlag( "PLAYER3" , INFOFLAG_NOATARI )
	}

	ResetStopFlag(STOPFLAG_SKIPOK)
	ResetStopFlag(STOPFLAG_SIMPLEEVENT2)
}


function "talk_switch04"
{
	SetStopFlag(STOPFLAG_SIMPLEEVENT2)		// LP操作、ストッパーなどのシンプルイベント
	SetStopFlag(STOPFLAG_SKIPOK)		// ×ボタンスキップを許可する
	
	ResetMotion( "ALL" , 1 )
	StopEffect(-1,ALL,1)
	StopEmotion( "ALL" )
	TurnToChr("LEADER", "this", 60.0f)
	ExecuteCmd( 1 , TurnToChr("PLAYER2","PLAYER1",60.0f) )
	ExecuteCmd( 1 , TurnToChr("PLAYER3","PLAYER1",60.0f) )
	SetChrInfoFlag( "PLAYER1" , INFOFLAG_FIXED )
	SetChrInfoFlag( "PLAYER2" , INFOFLAG_FIXED )
	SetChrInfoFlag( "PLAYER3" , INFOFLAG_FIXED )
	SetChrInfoFlag( "PLAYER1" , INFOFLAG_NOATARI )
	SetChrInfoFlag( "PLAYER2" , INFOFLAG_NOATARI )
	SetChrInfoFlag( "PLAYER3" , INFOFLAG_NOATARI )
	Wait(15)
	
	TalkPopup(UNDEF,0,3,SYSTEM_PPOSX,SYSTEM_PPOSY,0)
	{
		"#7C逆境を越えて征く者よ"
		"#7C 此処にその理を示せ "
	}
	WaitPrompt()
	WaitCloseWindow()
		
	//選択肢
	SetFlag(TF_MENU_SELECT,0)
	MenuReset()
	MenuType(MENUTYPE_POPUP)
	MenuAdd(0,"理力を込める")
	MenuAdd(1,"やめる")
	MenuOpen( TF_MENU_SELECT , -1 , SYSTEM_PPOSY , -2 , -2 , 10 , 1)
	WaitMenu(0)
	MenuClose(10,0)
	
	// 押す
	if( 0==FLAG[TF_MENU_SELECT] ){
	
		//開始処理ここから----------------------------------------------------
		FadeOut(FADE_BLACK,FADE_FAST)
		WaitFade()
		
	//イベント開始前情報の保存
	SaveEventState()
	SaveCamera()

	//パーティ状態のリセット
	CallFunc("system:party_reset_nopos")
	
	//カメラ設定
MoveCameraAt( 0 , 0.275f , 224.095f , 1.124f , 0 )	// 注視点
ChangeCameraDistance( 0 , 24.300f , 0 )		// 基本距離
ChangeCameraElevation( 0 , 22.351f , 0 )	// 基本仰角
RotateCamera( 0 , 341.681f , 0 )				// 角度
ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
RollCamera( 0 , 0.0f , 0 )				// ロール回転
// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

	// 被写界深度の設定
	SetDoF(0, LERP_LINEAR, 2.000, 60.000, 1.000, 0.700, 0.500)
	// グレアの設定
	SetGlare(0, LERP_LINEAR, 0.700, 1.300, 1.000, 1.000, 0.600, 0.000, 1.000)
	
		MapAnime("gim03", "stop" )	
		MapAnimeLast( "gim03","wait2")
		SetEnvSEPlayState(65421901,0)	// 風SE停止
		SetEnvSEPlayState(65421902,0)	// 風SE停止
		SetEnvSEPlayState(65421903,0)	// 風SE停止
		
		PlaySE(SE_GIM_PAST_WIND_OFF, 100, 0, 0, 0, 1.0f, 0)
		ExecuteCmd(1000, ChangeCameraDistance, INTERPOLATE_SPHERE , 28.000f , 120 )
		FadeIn(FADE_BLACK,FADE_FAST)
		WaitFade()
		
		Wait(30)
		MapHide("gim_bri" , 0 )
		Wait(90)
	
		FadeOut(FADE_BLACK, FADE_FAST)
		WaitFade()
		
		//　　操作許可を戻す。

		//終了処理ここから----------------------------------------------------
		//イベント前のキャラ情報を復帰
		RestoreEventState()

		//キャラモーション初期化
		CallFunc("system:reset_chrmot_ALL_nopos")

		//パーティキャラを解放
		ReleaseEventPartyChr()

		//マップパラメーターリセット
		ResetMapParam(-1)

		//エフェクトの停止
		StopEffect(-1, ALL, 1)

		//フラグ処理
		SetFlag(GF_MP6541_SWITCH_04, 1)
		SetChrWork("lookp04", CWK_CHECKOFF, 1)
		ChangeAnimation( "lookp04" , "ANI_STOP2", -1 , 1 )//OFF
		MapHide("gim_bri" , 0 )
		EventBox( 5, 0 )//風
		EventBox( 6, 0 )//風
		EventBox( 7, 0 )//風
		EventBox( 8, 0 )//風
		EventBox( 9, 0 )//風
		EventBox( 10, 0 )//風

		//イベント後の再配置

		//カメラ位置復帰
		RestoreCamera(0, 0)		//※上記カメラ位置を指定する場合は不要
		CallFunc("system:camera_reset")

		ResetStopFlag(STOPFLAG_SIMPLEEVENT2)
		FadeIn(FADE_BLACK,FADE_FAST)
		//WaitFade()

	} else {
		ResetChrInfoFlag( "PLAYER1" , INFOFLAG_FIXED )
		ResetChrInfoFlag( "PLAYER2" , INFOFLAG_FIXED )
		ResetChrInfoFlag( "PLAYER3" , INFOFLAG_FIXED )
		ResetChrInfoFlag( "PLAYER1" , INFOFLAG_NOATARI )
		ResetChrInfoFlag( "PLAYER2" , INFOFLAG_NOATARI )
		ResetChrInfoFlag( "PLAYER3" , INFOFLAG_NOATARI )
	}

	ResetStopFlag(STOPFLAG_SKIPOK)
	ResetStopFlag(STOPFLAG_SIMPLEEVENT2)
}

function "tuto_02_open"
{
	//短いものはイベントスキップ不要とのこと

	//叩いた直後のウエイト----------------------------------------------------
	// カメラ乗っ取る
	SetStopFlag(STOPFLAG_SIMPLEEVENT2)		// LP操作、ストッパーなどのシンプルイベント
	SetStopFlag(STOPFLAG_SKIPOK)		// ×ボタンスキップを許可する

	// 一時的にプレイヤー無敵
	SetChrWork(PLAYER1, CWK_MUTEKITIME, 90)
	SetChrWork(PLAYER2, CWK_MUTEKITIME, 90)
	SetChrWork(PLAYER3, CWK_MUTEKITIME, 90)
	SetChrWork(PLAYER4, CWK_MUTEKITIME, 90)
	Wait(10)

	//開始処理ここから----------------------------------------------------
	FadeOut(FADE_BLACK,FADE_FAST)
	WaitFade()

	//イベント開始前情報の保存
	SaveEventState()
	SaveCamera()

	//パーティ状態のリセット
	CallFunc("system:party_reset_nopos")

	//環境の初期化・不要なものを隠す
	ClearDebris()
	ResetChrPos((CHRTYPE_MONS | REMOVE_POS))
//	ResetChrPos((CHRTYPE_NPC | REMOVE_POS))

	//カメラ設定
	MoveCameraAt( 0 , -106.666f , 84.183f , 3.109f , 0 )	// 注視点
	ChangeCameraDistance( 0 , 25.500f , 0 )		// 基本距離
	ChangeCameraElevation( 0 , 14.643f , 0 )	// 基本仰角
	RotateCamera( 0 , 90.0f , 0 )				// 角度
	ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
	SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
	RollCamera( 0 , 0.0f , 0 )				// ロール回転
	// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

	// 被写界深度の設定
	SetDoF(0, LERP_LINEAR, 2.000, 40.000, 1.000, 0.700, 0.500)
	// グレアの設定
	SetGlare(0, LERP_LINEAR, 0.700, 1.300, 1.000, 1.000, 0.600, 0.000, 1.000)

	FadeIn(FADE_BLACK, FADE_FAST)
	WaitFade()

	// 扉見せる
	ExecuteCmd(1, MoveCameraAt, INTERPOLATE_SPHERE, -139.906f , 83.951f , 3.109f , 85 )	// 注視点
	WaitThread(1)


	ExecuteCmd(1000, MoveCameraAt, INTERPOLATE_SPHERE , -139.906f , 83.951f , 4.523f, 120 )
	ExecuteCmd(1001, ChangeCameraDistance, INTERPOLATE_SPHERE , 7.440f , 120 )
	ExecuteCmd(1002, ChangeCameraElevation, INTERPOLATE_SPHERE , 0.915f , 120 )
	ExecuteCmd(1003, RotateCamera, INTERPOLATE_SPHERE , 90.000f , 120 )

	//MoveCameraAt( 0 , -139.906f , 83.951f , 4.523f , 0 )	// 注視点
	//ChangeCameraDistance( 0 , 7.440f , 0 )		// 基本距離
	//ChangeCameraElevation( 0 , 0.915f , 0 )	// 基本仰角
	//RotateCamera( 0 , 89.871f , 0 )				// 角度
	//ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
	//SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
	//RollCamera( 0 , 0.0f , 0 )				// ロール回転
	// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。


	WaitThread(1000)
	WaitThread(1001)
	WaitThread(1002)
	WaitThread(1003)

	// 扉開く
	PlaySE(SE_GIM_PAST_DOOR, 100, 1, 0, 0, 1.0f, 0)
	MapAnime( "@gate_02" , "close_Lv1" )
	//EarthQuake(0.1f,0.1f,20)
	Wait(20)
	EarthQuake(0.1f,0.1f,10)
	PlaySE(SE_GIM_PAST_DOOR_STOP, 100, 0, 0, 0, 1.0f, 0)
	StopSE(SE_GIM_PAST_DOOR, 200)
	Wait(35)
	MapAnime( "@gate02_lumi1" , "off-on" )
	MapAnimeLast("@gate02_lumi1", "on" )
	PlaySE(SE_GIM_PAST_DOOR_PRE, 100, 0, 0, 0, 1.0f, 0)
	Wait(50)

	WaitThread(1000)
	WaitThread(1001)
	WaitThread(1002)
	WaitThread(1003)
	
	Wait(15)

	FadeOut(FADE_BLACK, FADE_FAST)
	WaitFade()

	//　　操作許可を戻す。

	//終了処理ここから----------------------------------------------------
	//イベント前のキャラ情報を復帰
	RestoreEventState()

	//隠したものを復帰。
	ResetChrPos((CHRTYPE_MONS | RESET_POS | RESET_AISTATE))

	//キャラモーション初期化
	CallFunc("system:reset_chrmot_ALL_nopos")

	//パーティキャラを解放
	ReleaseEventPartyChr()

	//マップパラメーターリセット
	ResetMapParam(-1)

	//エフェクトの停止
	StopEffect(-1, ALL, 1)

	//フラグ処理
	SetFlag(GF_MP6541_TUTO_03, 1)

	//イベント後の再配置

	//カメラ位置復帰
	RestoreCamera(0, 0)		//※上記カメラ位置を指定する場合は不要
	CallFunc("system:camera_reset")

	ResetStopFlag(STOPFLAG_SKIPOK)
	ResetStopFlag(STOPFLAG_SIMPLEEVENT2)
	FadeIn(FADE_BLACK,FADE_FAST)
	//WaitFade()
}

function "tuto_02_close"
{
	//短いものはイベントスキップ不要とのこと

	//叩いた直後のウエイト----------------------------------------------------
	// カメラ乗っ取る
	SetStopFlag(STOPFLAG_SIMPLEEVENT2)		// LP操作、ストッパーなどのシンプルイベント
	SetStopFlag(STOPFLAG_SKIPOK)		// ×ボタンスキップを許可する

	// 一時的にプレイヤー無敵
	SetChrWork(PLAYER1, CWK_MUTEKITIME, 90)
	SetChrWork(PLAYER2, CWK_MUTEKITIME, 90)
	SetChrWork(PLAYER3, CWK_MUTEKITIME, 90)
	SetChrWork(PLAYER4, CWK_MUTEKITIME, 90)
	Wait(10)

	//開始処理ここから----------------------------------------------------
	FadeOut(FADE_BLACK,FADE_FAST)
	WaitFade()

	//イベント開始前情報の保存
	SaveEventState()
	SaveCamera()

	//パーティ状態のリセット
	CallFunc("system:party_reset_nopos")

	//環境の初期化・不要なものを隠す
	ClearDebris()
	ResetChrPos((CHRTYPE_MONS | REMOVE_POS))
//	ResetChrPos((CHRTYPE_NPC | REMOVE_POS))

	//カメラ設定
	MoveCameraAt( 0 , -139.906f , 83.951f , 4.101f , 0 )	// 注視点
	ChangeCameraDistance( 0 , 14.440f , 0 )		// 基本距離
	ChangeCameraElevation( 0 , 4.555f , 0 )	// 基本仰角
	RotateCamera( 0 , 90.000f , 0 )				// 角度
	ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
	SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
	RollCamera( 0 , 0.0f , 0 )				// ロール回転
	
	// 被写界深度の設定
	SetDoF(0, LERP_LINEAR, 2.000, 40.000, 1.000, 0.700, 0.500)
	// グレアの設定
	SetGlare(0, LERP_LINEAR, 0.700, 1.300, 1.000, 1.000, 0.600, 0.000, 1.000)

	FadeIn(FADE_BLACK, FADE_FAST)
	WaitFade()

	Wait(25)

	// 扉開く
	PlaySE(SE_GIM_PAST_DOOR, 100, 1, 0, 0, 1.0f, 0)
	MapAnime( "@gate_02" , "close_Lv4" )
	//EarthQuake(0.1f,0.1f,20)
	Wait(20)
	EarthQuake(0.1f,0.1f,10)
	PlaySE(SE_GIM_PAST_DOOR_STOP, 100, 0, 0, 0, 1.0f, 0)
	StopSE(SE_GIM_PAST_DOOR, 200)
	Wait(35)
	MapAnime( "@gate02_lumi4" , "off-on" )
	MapAnimeLast("@gate02_lumi4", "on" )
	PlaySE(SE_GIM_PAST_DOOR_PRE, 100, 0, 0, 0, 1.0f, 0)
	Wait(70)

	if(FLAG[GF_MP6541_CLOSE_CNT] == 2 )
	{
		TalkPopup("DANA",0,3,SYSTEM_PPOSX,SYSTEM_PPOSY,0)
		{
			"どうやら封石を壊すごとに"
			"扉が閉まっていくみたいだね……\p"
			"ランプが４つ光ったら閉まるって事は"
			"３回までは封石を壊していいはず。\p"
			"よし、もう一度"
			"扉まで辿り着ける道を探してみよう！"
			"扉7行目"
		}	
		WaitPrompt()
		WaitCloseWindow()

		Wait(10)
	}

	FadeOut(FADE_BLACK, FADE_FAST)
	WaitFade()

	//　　操作許可を戻す。

	//終了処理ここから----------------------------------------------------
	//イベント前のキャラ情報を復帰
	RestoreEventState()

	//隠したものを復帰。
	ResetChrPos((CHRTYPE_MONS | RESET_POS | RESET_AISTATE))

	//キャラモーション初期化
	CallFunc("system:reset_chrmot_ALL_nopos")

	//パーティキャラを解放
	ReleaseEventPartyChr()

	//マップパラメーターリセット
	ResetMapParam(-1)

	//エフェクトの停止
	StopEffect(-1, ALL, 1)

	//イベント後の再配置

	//カメラ位置復帰
	RestoreCamera(0, 0)		//※上記カメラ位置を指定する場合は不要
	CallFunc("system:camera_reset")

	ResetStopFlag(STOPFLAG_SKIPOK)
	ResetStopFlag(STOPFLAG_SIMPLEEVENT2)
	FadeIn(FADE_BLACK,FADE_FAST)
	//WaitFade()
}

function "rockbreak_call"
{
	if( FLAG[TF_MP6541_DOOR_CLOSE_LV]<4 ){
		SetFlag(TF_MP6541_DOOR_CLOSE_LV, (FLAG[TF_MP6541_DOOR_CLOSE_LV] + 1))
		
		if( FLAG[TF_MP6541_DOOR_CLOSE_LV]==1 ){
			if( !FLAG[GF_MP6541_TUTO_03] ){
				EventCue("mp6542m:tuto_02_open")
				
			} else {
				MapAnime( "@gate_02" , "close_Lv1" )
				EarthQuake(0.2f,0.2f,10)
				PlaySE(SE_GIM_PAST_DOOR_STOP, 100, 0, 0, 0, 1.0f, 0)
				StopSE(SE_GIM_PAST_DOOR, 200)
				//Wait(10)
				PlaySE(SE_GIM_PAST_DOOR_PRE, 100, 0, 0, 0, 1.0f, 0)
				MapAnime( "@gate02_lumi1" , "off-on" )
				MapAnimeLast("@gate02_lumi1", "on" )
			}
		} else if( FLAG[TF_MP6541_DOOR_CLOSE_LV]==2 ){
			MapAnime( "@gate_02" , "close_Lv2" )
			EarthQuake(0.2f,0.2f,10)
			PlaySE(SE_GIM_PAST_DOOR_STOP, 100, 0, 0, 0, 1.0f, 0)
			StopSE(SE_GIM_PAST_DOOR, 200)
			//Wait(10)
			PlaySE(SE_GIM_PAST_DOOR_PRE, 100, 0, 0, 0, 1.0f, 0)
			MapAnime( "@gate02_lumi2" , "off-on" )
			MapAnimeLast("@gate02_lumi2", "on" )
			
		} else if( FLAG[TF_MP6541_DOOR_CLOSE_LV]==3 ){
			MapAnime( "@gate_02" , "close_Lv3" )
			EarthQuake(0.2f,0.2f,10)
			PlaySE(SE_GIM_PAST_DOOR_STOP, 100, 0, 0, 0, 1.0f, 0)
			StopSE(SE_GIM_PAST_DOOR, 200)
			//Wait(10)
			PlaySE(SE_GIM_PAST_DOOR_PRE, 100, 0, 0, 0, 1.0f, 0)
			MapAnime( "@gate02_lumi3" , "off-on" )
			MapAnimeLast("@gate02_lumi3", "on" )

		} else if( FLAG[TF_MP6541_DOOR_CLOSE_LV]==4 ){
			
			SetFlag(GF_MP6541_CLOSE_CNT,(FLAG[GF_MP6541_CLOSE_CNT] + 1))
		
			if(FLAG[GF_MP6541_CLOSE_CNT] > 3)
			{
				MapAnime( "@gate_02" , "close_Lv4" )//closed
				EarthQuake(0.2f,0.2f,10)
				PlaySE(SE_GIM_PAST_DOOR_STOP, 100, 0, 0, 0, 1.0f, 0)
				StopSE(SE_GIM_PAST_DOOR, 200)
				//Wait(10)
				PlaySE(SE_GIM_PAST_DOOR_PRE, 100, 0, 0, 0, 1.0f, 0)
				MapAnime( "@gate02_lumi4" , "off-on" )
				MapAnimeLast("@gate02_lumi4", "on" )
			}
			else
			{
				EventCue("mp6542m:tuto_02_close")
			}
		}
	}
}


function "lever_stc"
{
	SetStopFlag(STOPFLAG_SIMPLEEVENT2)		// LP操作、ストッパーなどのシンプルイベント
	SetStopFlag(STOPFLAG_SKIPOK)		// ×ボタンスキップを許可する
	ResetMotion( "ALL" , 1 )
	StopEffect(-1,ALL,1)
	StopEmotion( "ALL" )
	TurnToChr("LEADER", "this", 60.0f)
	ExecuteCmd( 1 , TurnToChr("PLAYER2","PLAYER1",60.0f) )
	ExecuteCmd( 1 , TurnToChr("PLAYER3","PLAYER1",60.0f) )
	SetChrInfoFlag( "PLAYER1" , INFOFLAG_FIXED )
	SetChrInfoFlag( "PLAYER2" , INFOFLAG_FIXED )
	SetChrInfoFlag( "PLAYER3" , INFOFLAG_FIXED )
	SetChrInfoFlag( "PLAYER1" , INFOFLAG_NOATARI )
	SetChrInfoFlag( "PLAYER2" , INFOFLAG_NOATARI )
	SetChrInfoFlag( "PLAYER3" , INFOFLAG_NOATARI )
	Wait(15)

	ChangeAnimation( "lever01s" , "ANI_OPEN", -1 , 1 )
	SetChrWork("lever01s", CWK_CHECKOFF, 1)
	Wait(35)

	//開始処理ここから----------------------------------------------------
	FadeOut(FADE_BLACK,FADE_FAST)
	WaitFade()
	
	//イベント開始前情報の保存
	SaveEventState()
	SaveCamera()

	//パーティ状態のリセット
	CallFunc("system:party_reset_nopos")

	//環境の初期化・不要なものを隠す
	ClearDebris()
	ResetChrPos((CHRTYPE_MONS | REMOVE_POS))
//	ResetChrPos((CHRTYPE_NPC | REMOVE_POS))

	//カメラ設定
MoveCameraAt( 0 , -142.973f , 84.012f , 2.365f , 0 )	// 注視点
ChangeCameraDistance( 0 , 13.200f , 0 )		// 基本距離
ChangeCameraElevation( 0 , 19.651f , 0 )	// 基本仰角
RotateCamera( 0 , 269.994f , 0 )				// 角度
ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
RollCamera( 0 , 0.0f , 0 )				// ロール回転
// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

	// 被写界深度の設定
	SetDoF(0, LERP_LINEAR, 2.000, 50.000, 1.000, 0.700, 0.500)
	// グレアの設定
	SetGlare(0, LERP_LINEAR, 0.700, 1.300, 1.000, 1.000, 0.600, 0.000, 1.000)

	ExecuteCmd(1001, MoveCameraAt, INTERPOLATE_SPHERE ,-131.879f , 83.920f , 2.365f , 60 )
	FadeIn(FADE_BLACK, FADE_FAST)
//	WaitFade()
//	WaitThread(1001)
	Wait(40)

	PlaySE(SE_GIM_PAST_SHORTCUT, 100, 1, 0, 0, 1.0f, 0)
	MapAnime( "EVENT_gim01" , "close-open" )
	MapAnimeLast("EVENT_gim01"       , "open" )
	Wait(32)
	EarthQuake(0.1f,0.1f,10)
	PlaySE(SE_GIM_PAST_SHORTCUT_STOP, 100, 0, 0, 0, 1.0f, 0)
	StopSE(SE_GIM_PAST_SHORTCUT, 200)
	Wait(40)
	WaitThread(1001)

	FadeOut(FADE_BLACK, FADE_FAST)
	WaitFade()

	//　　操作許可を戻す。

	//終了処理ここから----------------------------------------------------
	//イベント前のキャラ情報を復帰
	RestoreEventState()

	//隠したものを復帰。
	ResetChrPos((CHRTYPE_MONS | RESET_POS | RESET_AISTATE))

	//キャラモーション初期化
	CallFunc("system:reset_chrmot_ALL_nopos")

	//パーティキャラを解放
	ReleaseEventPartyChr()

	//マップパラメーターリセット
	ResetMapParam(-1)

	//エフェクトの停止
	StopEffect(-1, ALL, 1)

	//フラグ処理
	SetFlag(GF_MP6541_SHORTCUT_01, 1)

	//イベント後の再配置

	//カメラ位置復帰
	RestoreCamera(0, 0)		//※上記カメラ位置を指定する場合は不要
	CallFunc("system:camera_reset")

	ResetStopFlag(STOPFLAG_SKIPOK)
	ResetStopFlag(STOPFLAG_SIMPLEEVENT2)
	FadeIn(FADE_BLACK,FADE_FAST)
	//WaitFade()
}


function "lever_r"
{
	SetStopFlag(STOPFLAG_SIMPLEEVENT2)		// LP操作、ストッパーなどのシンプルイベント
	SetStopFlag(STOPFLAG_SKIPOK)		// ×ボタンスキップを許可する
	SetFlag(TF_MENU_SELECT2, 1)
	CallFunc("mp6542m:switch_03_open")	
	ResetStopFlag(STOPFLAG_SKIPOK)
	ResetStopFlag(STOPFLAG_SIMPLEEVENT2)
	//WaitFade()
}
function "lever_l"
{
	SetStopFlag(STOPFLAG_SIMPLEEVENT2)		// LP操作、ストッパーなどのシンプルイベント
	SetStopFlag(STOPFLAG_SKIPOK)		// ×ボタンスキップを許可する
	SetFlag(TF_MENU_SELECT2, 2)
	CallFunc("mp6542m:switch_03_open")	
	ResetStopFlag(STOPFLAG_SKIPOK)
	ResetStopFlag(STOPFLAG_SIMPLEEVENT2)
	//WaitFade()
}

function "switch_03_open"
{
	//短いものはイベントスキップ不要とのこと

	ResetMotion( "ALL" , 1 )
	StopEffect(-1,ALL,1)
	StopEmotion( "ALL" )
	TurnToChr("LEADER", "this", 60.0f)
	ExecuteCmd( 1 , TurnToChr("PLAYER2","PLAYER1",60.0f) )
	ExecuteCmd( 1 , TurnToChr("PLAYER3","PLAYER1",60.0f) )
	SetChrInfoFlag( "PLAYER1" , INFOFLAG_FIXED )
	SetChrInfoFlag( "PLAYER2" , INFOFLAG_FIXED )
	SetChrInfoFlag( "PLAYER3" , INFOFLAG_FIXED )
	SetChrInfoFlag( "PLAYER1" , INFOFLAG_NOATARI )
	SetChrInfoFlag( "PLAYER2" , INFOFLAG_NOATARI )
	SetChrInfoFlag( "PLAYER3" , INFOFLAG_NOATARI )
	Wait(15)

	TalkPopup(UNDEF,0,3,SYSTEM_PPOSX,SYSTEM_PPOSY,0)
	{
		"#7C冷闇を晴らさんと願う者よ"
		"#7C 　此処にその理を示せ　 "
	}
	WaitPrompt()
	WaitCloseWindow()
		
	//選択肢
	SetFlag(TF_MENU_SELECT,0)
	MenuReset()
	MenuType(MENUTYPE_POPUP)
	MenuAdd(0,"理力を込める")
	MenuAdd(1,"やめる")
	MenuOpen( TF_MENU_SELECT , -1 , SYSTEM_PPOSY , -2 , -2 , 10 , 1)
	WaitMenu(0)
	MenuClose(10,0)
	
	// 押す
	if( 0==FLAG[TF_MENU_SELECT] ){
		//開始処理ここから----------------------------------------------------
		FadeOut(FADE_BLACK,FADE_FAST)
		WaitFade()
		
		//イベント開始前情報の保存
		SaveEventState()
		SaveCamera()

		//パーティ状態のリセット
		CallFunc("system:party_reset_nopos")

		//環境の初期化・不要なものを隠す
		ClearDebris()
		ResetChrPos((CHRTYPE_MONS | REMOVE_POS))
	//	ResetChrPos((CHRTYPE_NPC | REMOVE_POS))

		//カメラ設定
		if( FLAG[TF_MENU_SELECT2]==1 ) {// 右
			SetChrWork("look01", CWK_CHECKOFF, 1)
			ChangeAnimation( "look01" , "ANI_STOP2", -1 , 1 )//OFF

			MoveCameraAt( 0 , 20.575f , 74.818f , 3.108f , 0 )	// 注視点
			ChangeCameraDistance( 0 , 28.600f , 0 )		// 基本距離
			ChangeCameraElevation( 0 , 20.0f , 0 )	// 基本仰角
			RotateCamera( 0 , 288.553f , 0 )				// 角度
			ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
			SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
			RollCamera( 0 , 0.0f , 0 )				// ロール回転
			// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。
		} else {// 左
			SetChrWork("look02", CWK_CHECKOFF, 1)
			ChangeAnimation( "look02" , "ANI_STOP2", -1 , 1 )//OFF
			MoveCameraAt( 0 , -18.739f , 75.254f , 3.108f , 0 )	// 注視点
			ChangeCameraDistance( 0 , 28.600f , 0 )		// 基本距離
			ChangeCameraElevation( 0 , 21.947f , 0 )	// 基本仰角
			RotateCamera( 0 , 68.022f , 0 )				// 角度
			ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
			SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
			RollCamera( 0 , 0.0f , 0 )				// ロール回転
			// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。
		}
		

		ExecuteCmd(1000, MoveCameraAt, INTERPOLATE_SPHERE ,2.029f , 68.454f , 3.108f , 100 )
		// 被写界深度の設定
		SetDoF(0, LERP_LINEAR, 2.000, 40.000, 1.000, 0.700, 0.500)
		// グレアの設定
		SetGlare(0, LERP_LINEAR, 0.700, 1.300, 1.000, 1.000, 0.600, 0.000, 1.000)

		FadeIn(FADE_BLACK, FADE_NORMAL)
		WaitFade()
		
		WaitThread(1000)
		// 扉見せる
		if( FLAG[TF_MENU_SELECT2]==1 ) {// 右
			if( FLAG[GF_MP6541_SWITCH_02B] ){
				MapAnime( "EVENT_gim02" , "open1-open2" )
				MapAnimeLast("EVENT_gim02", "open2" )
			} else {
				MapAnime( "EVENT_gim02" , "close-open1" )
				MapAnimeLast("EVENT_gim02", "open1" )
			}
			
			SetFlag(GF_MP6541_SWITCH_02A, 1)
			
		} else {// 左
			if( FLAG[GF_MP6541_SWITCH_02A] ){
				MapAnime( "EVENT_gim02" , "open1-open2" )
				MapAnimeLast("EVENT_gim02", "open2" )
			} else {
				MapAnime( "EVENT_gim02" , "close-open1" )
				MapAnimeLast("EVENT_gim02", "open1" )
			}
			
			SetFlag(GF_MP6541_SWITCH_02B, 1)
		}
		PlaySE(SE_GIM_PAST_STEP, 100, 1, 0, 0, 1.0f, 0)
		EarthQuake(0.02f,0.02f,45)
		if( FLAG[GF_MP6541_SWITCH_02A] && FLAG[GF_MP6541_SWITCH_02B] ) {
			Wait(25)
		} else {
			Wait(50)
		}
		EarthQuake(0.1f,0.1f,10)
		PlaySE(SE_GIM_PAST_STEP_STOP, 100, 0, 0, 0, 1.0f, 0)
		StopSE(SE_GIM_PAST_STEP, 200)
		Wait(30)

		if( FLAG[GF_MP6541_SWITCH_02A] && FLAG[GF_MP6541_SWITCH_02B] ) {
			ExecuteCmd(1000, MoveCameraAt, INTERPOLATE_SPHERE ,0.342f , 78.309f , 6.829f , 90 )
			ExecuteCmd(1001, ChangeCameraDistance, INTERPOLATE_SPHERE ,16.800f , 90 )
			ExecuteCmd(1002, ChangeCameraElevation, INTERPOLATE_SPHERE ,14.366 , 90 )
			ExecuteCmd(1003, RotateCamera, INTERPOLATE_SPHERE ,0.0f , 90 )
			WaitThread(1000)
			WaitThread(1001)
			WaitThread(1002)
			WaitThread(1003)
			Wait(15)
			ExecuteCmd(1001, ChangeCameraDistance, INTERPOLATE_SPHERE ,15.20f , 90 )
			Wait(25)
			FadeOut(FADE_BLACK, 60)
		} else {
			FadeOut(FADE_BLACK, FADE_NORMAL)
		}
		WaitFade()

		//　　操作許可を戻す。

		//終了処理ここから----------------------------------------------------
		//イベント前のキャラ情報を復帰
		RestoreEventState()

		//隠したものを復帰。
		ResetChrPos((CHRTYPE_MONS | RESET_POS | RESET_AISTATE))

		//キャラモーション初期化
		CallFunc("system:reset_chrmot_ALL_nopos")

		//パーティキャラを解放
		ReleaseEventPartyChr()

		//マップパラメーターリセット
		ResetMapParam(-1)

		//エフェクトの停止
		StopEffect(-1, ALL, 1)

		//フラグ処理

		//イベント後の再配置

		//カメラ位置復帰
		RestoreCamera(0, 0)		//※上記カメラ位置を指定する場合は不要
		CallFunc("system:camera_reset")
		FadeIn(FADE_BLACK,FADE_FAST)

	} else {
		ResetChrInfoFlag( "PLAYER1" , INFOFLAG_FIXED )
		ResetChrInfoFlag( "PLAYER2" , INFOFLAG_FIXED )
		ResetChrInfoFlag( "PLAYER3" , INFOFLAG_FIXED )
		ResetChrInfoFlag( "PLAYER1" , INFOFLAG_NOATARI )
		ResetChrInfoFlag( "PLAYER2" , INFOFLAG_NOATARI )
		ResetChrInfoFlag( "PLAYER3" , INFOFLAG_NOATARI )
	}
}

