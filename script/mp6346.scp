#include "inc/mons.h"
#include "inc/def.h"
#include "inc/flag.h"
#include "inc/se.h"
#include "inc/scr_inc.h"
#include "inc/3dicon.h"
#include "inc/skilldef.h"
#include "inc/vo.h"
#include "inc/music.h"
#include "inc/efx.h"

//----------------------------------------------------------------------------//
//                                                                            //
// 王家の谷⑥                                                                 //
//                                                                            //
//----------------------------------------------------------------------------//
///////////////////////////////////////////////////////////////////////////////
// 初期化スクリプト
///////////////////////////////////////////////////////////////////////////////
//-------------------------------------------


function "init"
{
	
	//長すぎるエントリ部分を自動開封
	OpenMinimap( PAGE_MP634x,2,152.0f,0.0f, 25)
	OpenMinimap( PAGE_MP634x,2,136.0f,0.0f, 25)
	OpenMinimap( PAGE_MP634x,2,120.0f,0.0f, 25)

	//初期状態を設定
	if(!FLAG[GF_MP6347_RESET_SWITCH] ) {		// 初期化を行ったかどうかのフラグ

		SetFlag(GF_MP6346_SWITCH_01R,3)			// mp6346 回転スイッチ１右	初期 3:左向き
		SetFlag(GF_MP6346_SWITCH_01L,1)			// mp6346 回転スイッチ１左	初期 1:右向き
		SetFlag(GF_MP6346_SWITCH_02R,0)			// mp6346 回転スイッチ２右	初期 0:正面
		SetFlag(GF_MP6346_SWITCH_02L,0)			// mp6346 回転スイッチ２左	初期 0:正面
		SetFlag(GF_MP6346_SWITCH_03R,1)			// mp6346 回転スイッチ３右	初期 1:右向き
		SetFlag(GF_MP6346_SWITCH_03L,3)			// mp6346 回転スイッチ３左	初期 3:左向き

		SetFlag(GF_MP6347_RESET_SWITCH, 1 ) 	// 初期化を行ったかどうかのフラグ
	}

	//扉１
	if(FLAG[GF_MP6346_SWITCH_01R] == 0){
		MapAnime( "switch1_r" , "wait_front" )
	} else if(FLAG[GF_MP6346_SWITCH_01R] == 1){
		MapAnime( "switch1_r" , "wait_right" )
	} else if(FLAG[GF_MP6346_SWITCH_01R] == 2){
		MapAnime( "switch1_r" , "wait_back" )
	} else if(FLAG[GF_MP6346_SWITCH_01R] == 3){
		MapAnime( "switch1_r" , "wait_left" )
	}
	if(FLAG[GF_MP6346_SWITCH_01L] == 0){
		MapAnime( "switch1_l" , "wait_front" )
	} else if(FLAG[GF_MP6346_SWITCH_01L] == 1){
		MapAnime( "switch1_l" , "wait_right" )
	} else if(FLAG[GF_MP6346_SWITCH_01L] == 2){
		MapAnime( "switch1_l" , "wait_back" )
	} else if(FLAG[GF_MP6346_SWITCH_01L] == 3){
		MapAnime( "switch1_l" , "wait_left" )
	}
	if(FLAG[GF_MP6346_SWITCH_01R]==0 && FLAG[GF_MP6346_SWITCH_01L]==0 ){	// 0:正面と:0正面で正解
		MapAnime( "door1" , "wait2" )
		SetFlag(GF_MP6346_DOOR_01,1)			// mp6346 ドアの開閉状態 0=close, 1=open
	} else {
		MapAnime( "door1" , "wait1" )
		SetFlag(GF_MP6346_DOOR_01,0)			// mp6346 ドアの開閉状態 0=close, 1=open
	}

	//扉２
	if(FLAG[GF_MP6346_SWITCH_02R] == 0){
		MapAnime( "switch2_r" , "wait_front" )
	} else if(FLAG[GF_MP6346_SWITCH_02R] == 1){
		MapAnime( "switch2_r" , "wait_right" )
	} else if(FLAG[GF_MP6346_SWITCH_02R] == 2){
		MapAnime( "switch2_r" , "wait_back" )
	} else if(FLAG[GF_MP6346_SWITCH_02R] == 3){
		MapAnime( "switch2_r" , "wait_left" )
	}
	if(FLAG[GF_MP6346_SWITCH_02L] == 0){
		MapAnime( "switch2_l" , "wait_front" )
	} else if(FLAG[GF_MP6346_SWITCH_02L] == 1){
		MapAnime( "switch2_l" , "wait_right" )
	} else if(FLAG[GF_MP6346_SWITCH_02L] == 2){
		MapAnime( "switch2_l" , "wait_back" )
	} else if(FLAG[GF_MP6346_SWITCH_02L] == 3){
		MapAnime( "switch2_l" , "wait_left" )
	}
	if(FLAG[GF_MP6346_SWITCH_02R]==1 && FLAG[GF_MP6346_SWITCH_02L]==3 ){	// 1:右と3:左で正解
		MapAnime( "door2" , "wait2" )
		SetFlag(GF_MP6346_DOOR_02,1)			// mp6346 ドアの開閉状態 0=close, 1=open
	} else {
		MapAnime( "door2" , "wait1" )
		SetFlag(GF_MP6346_DOOR_02,0)			// mp6346 ドアの開閉状態 0=close, 1=open
	}

	//扉３
	if(FLAG[GF_MP6346_SWITCH_03R] == 0){
		MapAnime( "switch3_r" , "wait_front" )
	} else if(FLAG[GF_MP6346_SWITCH_03R] == 1){
		MapAnime( "switch3_r" , "wait_right" )
	} else if(FLAG[GF_MP6346_SWITCH_03R] == 2){
		MapAnime( "switch3_r" , "wait_back" )
	} else if(FLAG[GF_MP6346_SWITCH_03R] == 3){
		MapAnime( "switch3_r" , "wait_left" )
	}
	if(FLAG[GF_MP6346_SWITCH_03L] == 0){
		MapAnime( "switch3_l" , "wait_front" )
	} else if(FLAG[GF_MP6346_SWITCH_03L] == 1){
		MapAnime( "switch3_l" , "wait_right" )
	} else if(FLAG[GF_MP6346_SWITCH_03L] == 2){
		MapAnime( "switch3_l" , "wait_back" )
	} else if(FLAG[GF_MP6346_SWITCH_03L] == 3){
		MapAnime( "switch3_l" , "wait_left" )
	}
	if(FLAG[GF_MP6346_SWITCH_03R]==3 && FLAG[GF_MP6346_SWITCH_03L]==1 ){	// 3:左と11右で正解
		MapAnime( "door3" , "wait2" )
		SetFlag(GF_MP6346_DOOR_03,1)			// mp6346 ドアの開閉状態 0=close, 1=open
	} else {
		MapAnime( "door3" , "wait1" )
		SetFlag(GF_MP6346_DOOR_03,0)			// mp6346 ドアの開閉状態 0=close, 1=open
	}

}




//-------------------------------------------
// スイッチ 01R
function "switch_01r"
{
	SetFlag(SF_ALLMUTEKI,1)		//無敵ＯＮ
	SetStopFlag(STOPFLAG_PC)
	SetStopFlag(STOPFLAG_EVENT)
	SaveCamera()
	SetChrWork("lookp01r", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに

	SetFlag( GF_MP6346_SWITCH_01R, (FLAG[GF_MP6346_SWITCH_01R]+1) )	// mp6346 回転スイッチ１右
	if( FLAG[GF_MP6346_SWITCH_01R] > 3){
		SetFlag( GF_MP6346_SWITCH_01R,0)
	}

	PlaySE("SE_GIM_SW", 100, 0,  0, 0, 1.0f, 0)	// 
	PlaySE("SE_GIM_SLIDE_STONE", 100, 1,  0, 0, 1.0f, 0)	// loop
	if( FLAG[GF_MP6346_SWITCH_01R] == 0){
		MapAnime( "switch1_r" , "turn_front" )
		Wait(50)
		MapAnime( "switch1_r" , "wait_front" )
	} else if( FLAG[GF_MP6346_SWITCH_01R] == 1){
		MapAnime( "switch1_r" , "turn_right" )
		Wait(50)
		MapAnime( "switch1_r" , "wait_right" )
	} else if( FLAG[GF_MP6346_SWITCH_01R] == 2){
		MapAnime( "switch1_r" , "turn_back" )
		Wait(50)
		MapAnime( "switch1_r" , "wait_back" )
	} else if( FLAG[GF_MP6346_SWITCH_01R] == 3){
		MapAnime( "switch1_r" , "turn_left" )
		Wait(50)
		MapAnime( "switch1_r" , "wait_left" )
	}

	StopSE("SE_GIM_SLIDE_STONE",500)	// loop stop
	Wait(10)
	CallFunc("mp6346:door_01")	// 扉の開閉制御

	SetFlag(SF_ALLMUTEKI,0)		//無敵ＯＦＦ
	ResetStopFlag(STOPFLAG_PC)
	ResetStopFlag(STOPFLAG_EVENT)
	SetChrWork("lookp01r", CWK_CHECKOFF, 0)		// 普通のルックポイントをオンに

}

//-------------------------------------------
// スイッチ 01L
function "switch_01l"
{
	SetFlag(SF_ALLMUTEKI,1)		//無敵ＯＮ
	SetStopFlag(STOPFLAG_PC)
	SetStopFlag(STOPFLAG_EVENT)
	SaveCamera()
	SetChrWork("lookp01l", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに

	SetFlag( GF_MP6346_SWITCH_01L, (FLAG[GF_MP6346_SWITCH_01L]+1) )	// mp6346 回転スイッチ１左
	if( FLAG[GF_MP6346_SWITCH_01L] > 3){
		SetFlag( GF_MP6346_SWITCH_01L,0)
	}

	PlaySE("SE_GIM_SW", 100, 0,  0, 0, 1.0f, 0)	// 
	PlaySE("SE_GIM_SLIDE_STONE", 100, 1,  0, 0, 1.0f, 0)	// loop
	if( FLAG[GF_MP6346_SWITCH_01L] == 0){
		MapAnime( "switch1_l" , "turn_front" )
		Wait(50)
		MapAnime( "switch1_l" , "wait_front" )
	} else if( FLAG[GF_MP6346_SWITCH_01L] == 1){
		MapAnime( "switch1_l" , "turn_right" )
		Wait(50)
		MapAnime( "switch1_l" , "wait_right" )
	} else if( FLAG[GF_MP6346_SWITCH_01L] == 2){
		MapAnime( "switch1_l" , "turn_back" )
		Wait(50)
		MapAnime( "switch1_l" , "wait_back" )
	} else if( FLAG[GF_MP6346_SWITCH_01L] == 3){
		MapAnime( "switch1_l" , "turn_left" )
		Wait(50)
		MapAnime( "switch1_l" , "wait_left" )
	}

	StopSE("SE_GIM_SLIDE_STONE",500)	// loop stop
	Wait(10)
	CallFunc("mp6346:door_01")	// 扉の開閉制御

	SetFlag(SF_ALLMUTEKI,0)		//無敵ＯＦＦ
	ResetStopFlag(STOPFLAG_PC)
	ResetStopFlag(STOPFLAG_EVENT)
	SetChrWork("lookp01l", CWK_CHECKOFF, 0)		// 普通のルックポイントをオンに
}

//-------------------------------------------
// 扉の開閉 01
function "door_01"
{

	if(FLAG[GF_MP6346_SWITCH_01R]==0 && FLAG[GF_MP6346_SWITCH_01L]==0 && FLAG[GF_MP6346_DOOR_01]==0 ){	// 0:正面と:0正面で正解

		CrossFade(FADE_FAST)
//		FadeOut(FADE_BLACK,FADE_FAST)
//		WaitFade()

		MoveCameraAt( 0 , 239.807f , -7.390f , -6.194f , 0 )	// 注視点
		ChangeCameraDistance( 0 , 8.000f , 0 )		// 基本距離
		ChangeCameraElevation( 0 , 39.375f , 0 )	// 基本仰角
		RotateCamera( 0 , 296.865f , 0 )				// 角度
		ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
		SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
		RollCamera( 0 , 0.0f , 0 )				// ロール回転
		// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

		//Wait(15)
		//FadeIn(FADE_BLACK,FADE_FAST)

		PlaySE("SE_GIM_DOOR_ROCK", 100, 1,  0, 0, 1.0f, 0)	// 動く音 loop
		MapAnime( "door1" , "open" )
		SetFlag(GF_MP6346_DOOR_01,1)			// mp6346 ドアの開閉状態 0=close, 1=open
		Wait(85)
		StopSE("SE_GIM_DOOR_ROCK",100)	// loop stop
		PlaySE("SE_GIM_DOOR_ROCK_STOP", 100, 0,  0, 0, 1.0f, 0)	// 停止音
		EarthQuake(0.1f,0.1f,10)

		//WaitFade()

		FadeOut(FADE_BLACK,FADE_FAST)
		WaitFade()
		RestoreCamera(0,0)
		//Wait(15)
		FadeIn(FADE_BLACK,FADE_FAST)
		//WaitFade()
		if (!FLAG[GF_AVOICE_0529])
		{
			ActiveVoiceStart(EACT_EVID_0529, 1, 0)	//初めて扉のギミックを解いた
		}
		
	} else if((FLAG[GF_MP6346_SWITCH_01R]!=0 || FLAG[GF_MP6346_SWITCH_01L]!=0) && FLAG[GF_MP6346_DOOR_01]==1 ){	// 0:正面と:0正面で正解

		CrossFade(FADE_FAST)
		//FadeOut(FADE_BLACK,FADE_FAST)
		//WaitFade()

		MoveCameraAt( 0 , 239.807f , -7.390f , -6.194f , 0 )	// 注視点
		ChangeCameraDistance( 0 , 8.000f , 0 )		// 基本距離
		ChangeCameraElevation( 0 , 39.375f , 0 )	// 基本仰角
		RotateCamera( 0 , 296.865f , 0 )				// 角度
		ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
		SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
		RollCamera( 0 , 0.0f , 0 )				// ロール回転
		// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

		//Wait(15)
		//FadeIn(FADE_BLACK,FADE_FAST)

		PlaySE("SE_GIM_DOOR_ROCK", 100, 1,  0, 0, 1.0f, 0)	// 動く音 loop
		MapAnime( "door1" , "close" )
		SetFlag(GF_MP6346_DOOR_01,0)			// mp6346 ドアの開閉状態 0=close, 1=open
		//Wait(85)
		Wait(75)	//SEtiming
		StopSE("SE_GIM_DOOR_ROCK",100)	// loop stop
		PlaySE("SE_GIM_DOOR_ROCK_STOP", 100, 0,  0, 0, 1.0f, 0)	// 停止音
		EarthQuake(0.1f,0.1f,10)

		//WaitFade()

		FadeOut(FADE_BLACK,FADE_FAST)
		WaitFade()
		RestoreCamera(0,0)
		//Wait(15)
		FadeIn(FADE_BLACK,FADE_FAST)
		//WaitFade()

	}
}


//-------------------------------------------
// スイッチ 02R
function "switch_02r"
{
	SetFlag(SF_ALLMUTEKI,1)		//無敵ＯＮ
	SetStopFlag(STOPFLAG_PC)
	SetStopFlag(STOPFLAG_EVENT)
	SaveCamera()
	SetChrWork("lookp02r", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに

	SetFlag( GF_MP6346_SWITCH_02R, (FLAG[GF_MP6346_SWITCH_02R]+1) )	// mp6346 回転スイッチ１右
	if( FLAG[GF_MP6346_SWITCH_02R] > 3){
		SetFlag( GF_MP6346_SWITCH_02R,0)
	}

	PlaySE("SE_GIM_SW", 100, 0,  0, 0, 1.0f, 0)	// 
	PlaySE("SE_GIM_SLIDE_STONE", 100, 1,  0, 0, 1.0f, 0)	// loop
	if( FLAG[GF_MP6346_SWITCH_02R] == 0){
		MapAnime( "switch2_r" , "turn_front" )
		Wait(50)
		MapAnime( "switch2_r" , "wait_front" )
	} else if( FLAG[GF_MP6346_SWITCH_02R] == 1){
		MapAnime( "switch2_r" , "turn_right" )
		Wait(50)
		MapAnime( "switch2_r" , "wait_right" )
	} else if( FLAG[GF_MP6346_SWITCH_02R] == 2){
		MapAnime( "switch2_r" , "turn_back" )
		Wait(50)
		MapAnime( "switch2_r" , "wait_back" )
	} else if( FLAG[GF_MP6346_SWITCH_02R] == 3){
		MapAnime( "switch2_r" , "turn_left" )
		Wait(50)
		MapAnime( "switch2_r" , "wait_left" )
	}

	StopSE("SE_GIM_SLIDE_STONE",500)	// loop stop
	Wait(10)
	CallFunc("mp6346:door_02")	// 扉の開閉制御

	SetFlag(SF_ALLMUTEKI,0)		//無敵ＯＦＦ
	ResetStopFlag(STOPFLAG_PC)
	ResetStopFlag(STOPFLAG_EVENT)
	SetChrWork("lookp02r", CWK_CHECKOFF, 0)		// 普通のルックポイントをオンに

}

//-------------------------------------------
// スイッチ 02L
function "switch_02l"
{
	SetFlag(SF_ALLMUTEKI,1)		//無敵ＯＮ
	SetStopFlag(STOPFLAG_PC)
	SetStopFlag(STOPFLAG_EVENT)
	SaveCamera()
	SetChrWork("lookp02l", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに

	SetFlag( GF_MP6346_SWITCH_02L, (FLAG[GF_MP6346_SWITCH_02L]+1) )	// mp6346 回転スイッチ１左
	if( FLAG[GF_MP6346_SWITCH_02L] > 3){
		SetFlag( GF_MP6346_SWITCH_02L,0)
	}

	PlaySE("SE_GIM_SW", 100, 0,  0, 0, 1.0f, 0)	// 
	PlaySE("SE_GIM_SLIDE_STONE", 100, 1,  0, 0, 1.0f, 0)	// loop
	if( FLAG[GF_MP6346_SWITCH_02L] == 0){
		MapAnime( "switch2_l" , "turn_front" )
		Wait(50)
		MapAnime( "switch2_l" , "wait_front" )
	} else if( FLAG[GF_MP6346_SWITCH_02L] == 1){
		MapAnime( "switch2_l" , "turn_right" )
		Wait(50)
		MapAnime( "switch2_l" , "wait_right" )
	} else if( FLAG[GF_MP6346_SWITCH_02L] == 2){
		MapAnime( "switch2_l" , "turn_back" )
		Wait(50)
		MapAnime( "switch2_l" , "wait_back" )
	} else if( FLAG[GF_MP6346_SWITCH_02L] == 3){
		MapAnime( "switch2_l" , "turn_left" )
		Wait(50)
		MapAnime( "switch2_l" , "wait_left" )
	}

	StopSE("SE_GIM_SLIDE_STONE",500)	// loop stop
	Wait(10)
	CallFunc("mp6346:door_02")	// 扉の開閉制御

	SetFlag(SF_ALLMUTEKI,0)		//無敵ＯＦＦ
	ResetStopFlag(STOPFLAG_PC)
	ResetStopFlag(STOPFLAG_EVENT)
	SetChrWork("lookp02l", CWK_CHECKOFF, 0)		// 普通のルックポイントをオンに

}

//-------------------------------------------
// 扉の開閉 02
function "door_02"
{

	if(FLAG[GF_MP6346_SWITCH_02R]==1 && FLAG[GF_MP6346_SWITCH_02L]==3 && FLAG[GF_MP6346_DOOR_02]==0 ){	// 1:右と3:左で正解

		CrossFade(FADE_FAST)
		//FadeOut(FADE_BLACK,FADE_FAST)
		//WaitFade()

		MoveCameraAt( 0 , 300.053f , 5.164f , -22.690f , 0 )	// 注視点
		ChangeCameraDistance( 0 , 8.000f , 0 )		// 基本距離
		ChangeCameraElevation( 0 , 33.696f , 0 )	// 基本仰角
		RotateCamera( 0 , 253.744f , 0 )				// 角度
		ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
		SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
		RollCamera( 0 , 0.0f , 0 )				// ロール回転

		//Wait(15)

		//FadeIn(FADE_BLACK,FADE_FAST)

		PlaySE("SE_GIM_DOOR_ROCK", 100, 1,  0, 0, 1.0f, 0)	// 動く音 loop
		MapAnime( "door2" , "open" )
		SetFlag(GF_MP6346_DOOR_02,1)			// mp6346 ドアの開閉状態 0=close, 1=open
		Wait(85)
		StopSE("SE_GIM_DOOR_ROCK",100)	// loop stop
		PlaySE("SE_GIM_DOOR_ROCK_STOP", 100, 0,  0, 0, 1.0f, 0)	// 停止音
		EarthQuake(0.1f,0.1f,10)

		//WaitFade()

		FadeOut(FADE_BLACK,FADE_FAST)
		WaitFade()
		RestoreCamera(0,0)
		//Wait(15)
		FadeIn(FADE_BLACK,FADE_FAST)
		//WaitFade()

	} else if((FLAG[GF_MP6346_SWITCH_02R]!=1 || FLAG[GF_MP6346_SWITCH_02L]!=3) && FLAG[GF_MP6346_DOOR_02]==1 ){	// 1:右と3:左で正解

		CrossFade(FADE_FAST)

		//FadeOut(FADE_BLACK,FADE_FAST)
		//WaitFade()

		MoveCameraAt( 0 , 300.053f , 5.164f , -22.690f , 0 )	// 注視点
		ChangeCameraDistance( 0 , 8.000f , 0 )		// 基本距離
		ChangeCameraElevation( 0 , 33.696f , 0 )	// 基本仰角
		RotateCamera( 0 , 253.744f , 0 )				// 角度
		ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
		SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
		RollCamera( 0 , 0.0f , 0 )				// ロール回転

		//Wait(15)

		//FadeIn(FADE_BLACK,FADE_FAST)

		PlaySE("SE_GIM_DOOR_ROCK", 100, 1,  0, 0, 1.0f, 0)	// 動く音 loop
		MapAnime( "door2" , "close" )
		SetFlag(GF_MP6346_DOOR_02,0)			// mp6346 ドアの開閉状態 0=close, 1=open
		//Wait(85)
		Wait(75)	//SEtiming
		StopSE("SE_GIM_DOOR_ROCK",100)	// loop stop
		PlaySE("SE_GIM_DOOR_ROCK_STOP", 100, 0,  0, 0, 1.0f, 0)	// 停止音
		EarthQuake(0.1f,0.1f,10)

		//WaitFade()

		FadeOut(FADE_BLACK,FADE_FAST)
		WaitFade()
		RestoreCamera(0,0)
		//Wait(15)
		FadeIn(FADE_BLACK,FADE_FAST)
		//WaitFade()
	}
}




//-------------------------------------------
// スイッチ 03R
function "switch_03r"
{
	SetFlag(SF_ALLMUTEKI,1)		//無敵ＯＮ
	SetStopFlag(STOPFLAG_PC)
	SetStopFlag(STOPFLAG_EVENT)
	SaveCamera()
	SetChrWork("lookp03r", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに

	SetFlag( GF_MP6346_SWITCH_03R, (FLAG[GF_MP6346_SWITCH_03R]+1) )	// mp6346 回転スイッチ１右
	if( FLAG[GF_MP6346_SWITCH_03R] > 3){
		SetFlag( GF_MP6346_SWITCH_03R,0)
	}

	PlaySE("SE_GIM_SW", 100, 0,  0, 0, 1.0f, 0)	// 
	PlaySE("SE_GIM_SLIDE_STONE", 100, 1,  0, 0, 1.0f, 0)	// loop
	if( FLAG[GF_MP6346_SWITCH_03R] == 0){
		MapAnime( "switch3_r" , "turn_front" )
		Wait(50)
		MapAnime( "switch3_r" , "wait_front" )
	} else if( FLAG[GF_MP6346_SWITCH_03R] == 1){
		MapAnime( "switch3_r" , "turn_right" )
		Wait(50)
		MapAnime( "switch3_r" , "wait_right" )
	} else if( FLAG[GF_MP6346_SWITCH_03R] == 2){
		MapAnime( "switch3_r" , "turn_back" )
		Wait(50)
		MapAnime( "switch3_r" , "wait_back" )
	} else if( FLAG[GF_MP6346_SWITCH_03R] == 3){
		MapAnime( "switch3_r" , "turn_left" )
		Wait(50)
		MapAnime( "switch3_r" , "wait_left" )
	}

	StopSE("SE_GIM_SLIDE_STONE",500)	// loop stop
	Wait(10)
	CallFunc("mp6346:door_03")	// 扉の開閉制御

	SetFlag(SF_ALLMUTEKI,0)		//無敵ＯＦＦ
	ResetStopFlag(STOPFLAG_PC)
	ResetStopFlag(STOPFLAG_EVENT)
	RestoreCamera(0,0)
	SetChrWork("lookp03r", CWK_CHECKOFF, 0)		// 普通のルックポイントをオンに

}

//-------------------------------------------
// スイッチ 03L
function "switch_03l"
{
	SetFlag(SF_ALLMUTEKI,1)		//無敵ＯＮ
	SetStopFlag(STOPFLAG_PC)
	SetStopFlag(STOPFLAG_EVENT)
	SaveCamera()
	SetChrWork("lookp03l", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに

	SetFlag( GF_MP6346_SWITCH_03L, (FLAG[GF_MP6346_SWITCH_03L]+1) )	// mp6346 回転スイッチ１左
	if( FLAG[GF_MP6346_SWITCH_03L] > 3){
		SetFlag( GF_MP6346_SWITCH_03L,0)
	}

	PlaySE("SE_GIM_SW", 100, 0,  0, 0, 1.0f, 0)	// 
	PlaySE("SE_GIM_SLIDE_STONE", 100, 1,  0, 0, 1.0f, 0)	// loop
	if( FLAG[GF_MP6346_SWITCH_03L] == 0){
		MapAnime( "switch3_l" , "turn_front" )
		Wait(50)
		MapAnime( "switch3_l" , "wait_front" )
	} else if( FLAG[GF_MP6346_SWITCH_03L] == 1){
		MapAnime( "switch3_l" , "turn_right" )
		Wait(50)
		MapAnime( "switch3_l" , "wait_right" )
	} else if( FLAG[GF_MP6346_SWITCH_03L] == 2){
		MapAnime( "switch3_l" , "turn_back" )
		Wait(50)
		MapAnime( "switch3_l" , "wait_back" )
	} else if( FLAG[GF_MP6346_SWITCH_03L] == 3){
		MapAnime( "switch3_l" , "turn_left" )
		Wait(50)
		MapAnime( "switch3_l" , "wait_left" )
	}

	StopSE("SE_GIM_SLIDE_STONE",500)	// loop stop
	Wait(10)
	CallFunc("mp6346:door_03")	// 扉の開閉制御

	SetFlag(SF_ALLMUTEKI,0)		//無敵ＯＦＦ
	ResetStopFlag(STOPFLAG_PC)
	ResetStopFlag(STOPFLAG_EVENT)
	RestoreCamera(0,0)
	SetChrWork("lookp03l", CWK_CHECKOFF, 0)		// 普通のルックポイントをオンに

}

//-------------------------------------------
// 扉の開閉 03
function "door_03"
{

	if(FLAG[GF_MP6346_SWITCH_03R]==3 && FLAG[GF_MP6346_SWITCH_03L]==1 && FLAG[GF_MP6346_DOOR_03]==0 ){	// 3:左と11右で正解

		CrossFade(FADE_FAST)

		//FadeOut(FADE_BLACK,FADE_FAST)
		//WaitFade()

		MoveCameraAt( 0 , 384.482f , -0.095f , -38.938f , 0 )	// 注視点
		ChangeCameraDistance( 0 , 8.000f , 0 )		// 基本距離
		ChangeCameraElevation( 0 , 34.982f , 0 )	// 基本仰角
		RotateCamera( 0 , 270.179f , 0 )				// 角度
		ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
		SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
		RollCamera( 0 , 0.0f , 0 )				// ロール回転

		//Wait(15)

		//FadeIn(FADE_BLACK,FADE_FAST)

		PlaySE("SE_GIM_DOOR_ROCK", 100, 1,  0, 0, 1.0f, 0)	// 動く音 loop
		MapAnime( "door3" , "open" )
		SetFlag(GF_MP6346_DOOR_03,1)			// mp6346 ドアの開閉状態 0=close, 1=open
		Wait(85)
		StopSE("SE_GIM_DOOR_ROCK",100)	// loop stop
		PlaySE("SE_GIM_DOOR_ROCK_STOP", 100, 0,  0, 0, 1.0f, 0)	// 停止音
		EarthQuake(0.1f,0.1f,10)

		//WaitFade()

		FadeOut(FADE_BLACK,FADE_FAST)
		WaitFade()
		RestoreCamera(0,0)
		//Wait(15)
		FadeIn(FADE_BLACK,FADE_FAST)
		//WaitFade()

	} else if((FLAG[GF_MP6346_SWITCH_03R]!=3 || FLAG[GF_MP6346_SWITCH_03L]!=1) && FLAG[GF_MP6346_DOOR_03]==1 ){	// 3:左と11右で正解

		CrossFade(FADE_FAST)

		//FadeOut(FADE_BLACK,FADE_FAST)
		//WaitFade()

		MoveCameraAt( 0 , 384.482f , -0.095f , -38.938f , 0 )	// 注視点
		ChangeCameraDistance( 0 , 8.000f , 0 )		// 基本距離
		ChangeCameraElevation( 0 , 34.982f , 0 )	// 基本仰角
		RotateCamera( 0 , 270.179f , 0 )				// 角度
		ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
		SetCameraZPlane( 0.100f , 600.000f )			// ZPlane
		RollCamera( 0 , 0.0f , 0 )				// ロール回転

		//Wait(15)

		//FadeIn(FADE_BLACK,FADE_FAST)

		PlaySE("SE_GIM_DOOR_ROCK", 100, 1,  0, 0, 1.0f, 0)	// 動く音 loop
		MapAnime( "door3" , "close" )
		SetFlag(GF_MP6346_DOOR_03,0)			// mp6346 ドアの開閉状態 0=close, 1=open
		//Wait(85)
		Wait(75)	//SEtiming
		StopSE("SE_GIM_DOOR_ROCK",100)	// loop stop
		PlaySE("SE_GIM_DOOR_ROCK_STOP", 100, 0,  0, 0, 1.0f, 0)	// 停止音
		EarthQuake(0.1f,0.1f,10)

		//WaitFade()

		FadeOut(FADE_BLACK,FADE_FAST)
		WaitFade()
		RestoreCamera(0,0)
		//Wait(15)
		FadeIn(FADE_BLACK,FADE_FAST)
		//WaitFade()
	}
}

























////////////////////////////////////////////////////////////////////////////////

//■メインイベントセクション

////////////////////////////////////////////////////////////////////////////////
