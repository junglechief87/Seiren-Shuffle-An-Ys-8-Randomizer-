#include "inc/mons.h"
#include "inc/def.h"
#include "inc/flag.h"
#include "inc/se.h"
#include "inc/scr_inc.h"
#include "inc/3dicon.h"
#include "inc/skilldef.h"
#include "inc/vo.h"

//----------------------------------------------------------------------------//
//                                                                            //
// 浸食谷                                                                       //
//                                                                            //
//----------------------------------------------------------------------------//
///////////////////////////////////////////////////////////////////////////////
// 初期化スクリプト
///////////////////////////////////////////////////////////////////////////////
//-------------------------------------------
function "init"
{
	

	if(FLAG[GF_MP430x_GIM_01] ){
		//ショートカット１を開通状態に
		MapAnime( "gim01" , "wait2" )
		SetChrPos("lookp01",-100000.0f, 0.0f, 0.0f)
	}
	if(FLAG[GF_MP430x_GIM_02] ){
		//ショートカット１を開通状態に
		MapAnime( "gim02" , "wait2" )
		SetChrPos("lookp02",-100000.0f, 0.0f, 0.0f)
	}

	if( FLAG[SF_EVENT_ON] ){
	// イベント発生制御

		//マップ名表示カメラ演出
		if (!FLAG[SF_LOADINIT] && !FLAG[GF_SUBEV_AREANAME_4301]){
			if (FLAG[SF_LASTENTRY_NO] == 0){
				SetFlag(GF_SUBEV_AREANAME_4301,1)
				//SetFlag(GF_MPxxxx_MAP_NAME_NO_DRAW, 1)		// 地名表示制御
				//EventCue("mp4301:SubEV_AreaName_4301")		//【エリアカメラ演出：侵食谷】
			}
		}

		// アクティブボイス
		if(!FLAG[GF_AVOICE_0216] && FLAG[GF_02MP4102_MAKE_CAMP] && !FLAG[GF_02MP4306_KILL_MIDBOSS] &&  FLAG[SF_LASTENTRY_NO] == 0 ){
			//ActiveVoiceStop(ACTIVEVOICESTOP_WINDOWOFF)
			//ActiveVoiceStart(EACT_EVID_0216, 1, 0)	//初めてエリアに入ったら
			SetEventDriven(EED_TYPE_TIMER,120,"mp4301:act_0216")
		}
	}

	//マップ名表示
	if(!FLAG[SF_LOADINIT] && !FLAG[GF_MPxxxx_MAP_NAME_NO_DRAW] && !FLAG[TF_MAPNAME_SHOWN]){
		if( FLAG[SF_LASTENTRY_NO] == 0 ){
			VisualName("visual/mapname/mn_4301.itp",VN_NAMEMAP2,-1,-1,VN_MAPNAME_TIME)//浸食谷
			SetFlag( TF_MAPNAME_SHOWN, 1 )				// 地名表示した（テンポラリ）

		}
	}

	//骸骨：宝箱
	if( FLAG[GF_MP4301_SKELETON01] ){
		ChangeAnimation( "Skeleton01" , "ANI_STOP2", -1 , 1 )		//取った後
		SetChrWork("Skeleton01", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに
	}
}

function "act_0216"
{
		ActiveVoiceStop(ACTIVEVOICESTOP_WINDOWOFF)
		ActiveVoiceStart(EACT_EVID_0216, 1, 0)			//初めてエリアに入ったら
}

//-------------------------------------------
//骸骨
//function "Skeleton01"	//下の【海賊のメモ①】に統合致しました
//{
//
////	SetStopFlag(STOPFLAG_PC)
//	SetStopFlag(STOPFLAG_TALK)
//
//	ChangeAnimation( "PLAYER1" , "ANI_GET_ITEM", -1 , 1 )
//	Wait(10)
//	ChangeAnimation( "this" , "ANI_WAIT0", -1 , 1 )		//キラキラ消す
//
//	GetItemMessageExPlus( ICON3D_MEMO_P_001, 1 , ITEMMSG_SE_BETTER , "を手に入れた。" , 0 , 0 )
//	WaitPrompt()
//	WaitCloseWindow()
//	GetItem(ICON3D_MEMO_P_001,1)		//海賊のメモ①
//
//	PlaySE(SE_BREAK_MAT_0061,100,0,  0, 0, 1.0f, 0)		//◆仮ＳＥ
//	ChangeAnimation( "this" , "ANI_OPEN", -1 , 1 )		//崩れる
//
//	//開けた
//	SetFlag( GF_MP4301_SKELETON01, 1 )
//	SetChrWork("this", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに
//
////	ResetStopFlag(STOPFLAG_PC)
//	ResetStopFlag(STOPFLAG_TALK)
//
//}
//-------------------------------------------
function "shortcut01"
{
	// マップのアニメ設定
	SetFlag(GF_MP430x_GIM_01,1)
	SetChrPos("lookp01",-100000.0f, 0.0f, 0.0f)
	MapAnime( "gim01" , "open" )
	PlaySE("SE_GIM_STOP_WOOD_1", 100, 0,  0, 0, 1.0f, 0)	//gimse
	Wait(50)
	PlaySE("SE_GIM_STOP_WOOD_2", 100, 0,  0, 0, 1.0f, 0)	//gimse
	EarthQuake(0.1f,0.1f,10)
	Wait(30)
}

function "shortcut02"
{
	// マップのアニメ設定
	SetFlag(GF_MP430x_GIM_02,1)
	SetChrPos("lookp02",-100000.0f, 0.0f, 0.0f)
	MapAnime( "gim02" , "open" )
	PlaySE("SE_GIM_STOP_WOOD_1", 100, 0,  0, 0, 1.0f, 0)	//gimse
	Wait(50)
	PlaySE("SE_GIM_STOP_WOOD_2", 100, 0,  0, 0, 1.0f, 0)	//gimse
	EarthQuake(0.1f,0.1f,10)
	Wait(30)
}

//== == == == == == == == == == == == == == == == == == == == == == == ==
//【エリアカメラ演出：侵食谷】
//== == == == == == == == == == == == == == == == == == == == == == == ==
//
//初回侵食谷に入ると、カメラを動かし
//ダンジョンの様子を見せる。
//ここでエリア名スプラッシュを表示。
//
//演出終了後、暗転を挟んで操作許可を戻す。

function "SubEV_AreaName_4301"
{
	SetStopFlag(STOPFLAG_EVENT)

	FadeOut(FADE_BLACK, 0)
	WaitFade()

	//イベント開始前情報の保存
	SaveEventState()
	SaveCamera()
	//パーティ状態のリセット
	CallFunc("system:party_reset")

	//環境の初期化・不要なものを隠す
	ClearDebris()
	ResetChrPos((CHRTYPE_MONS | REMOVE_POS))
	ResetChrPos((CHRTYPE_NPC | REMOVE_POS))

	SetChrPos("PLAYER1",-230.68f,-247.50f,5.58f)
	Turn("PLAYER1",-143.27f,360.0f)
	ResetPartyPos()
	ResetFollowPoint()

	ChangeAnimation("LEADER", "ANI_WAIT", -1, 1)

	// チュートリアルポートレート読み込み
	Portrait_Load(0, "system/black.itp" )		//擬似フェードアウト用
	Portrait_Create(0, 0, 0, 0, 0, 64,64, 0.0f, 0x00ffffff, 0x00000000)
	Portrait_Load(1, "visual/help/hp_00.itp" )	// 背景用
	Portrait_Create(1, HELP_POS_X, HELP_POS_Y, 0, 0, HELP_SCALE_X, HELP_SCALE_Y, 0.0f, 0x00ffffff, 0x00000000)
	Portrait_Load(2, "visual/help/hp_a49.itp" )	// help_a49：閃光を放つ石
	Portrait_Create(2, HELP_POS_X, HELP_POS_Y, 0, 0, HELP_SCALE_X, HELP_SCALE_Y, 0.0f, 0x00ffffff, 0x00000000)

	// カメラ
	MoveCameraAt(0, -161.812f, -107.267f, 5.723f, 0)	// 注視点
	ChangeCameraDistance(0, 17.199f, 0)		// 基本距離
	ChangeCameraElevation(0, -10.417f, 0)	// 基本仰角
	RotateCamera(0, 308.085f, 0)				// 角度
	ChangeCameraPers(0, 60.000f, 0)			// 視野角
	SetCameraZPlane(0.100f, 300.000f)			// ZPlane
	RollCamera(0, 0.0f, 0)				// ロール回転

	SetShadowBound(512.0f,512.0f )

	//スキップ許可
	SetSkipScript("mp4301:SubEV_AreaName_4301_ED")

	//-- カット ----------------------------------------------------------
	// フェードイン
	FadeIn(FADE_BLACK, FADE_NORMAL)
	WaitFade()
	
	Wait(15)
	
	ExecuteCmd(1000, MoveCameraAt, INTERPOLATE_SPHERE, -193.461f, -116.578f, 5.927f, 120)	// 注視点
	ExecuteCmd(1001, ChangeCameraDistance, INTERPOLATE_SPHERE, 16.126f, 120)		// 基本距離
	ExecuteCmd(1002, ChangeCameraElevation, INTERPOLATE_SPHERE, 16.219f, 120)	// 基本仰角
	ExecuteCmd(1003, RotateCamera, INTERPOLATE_SPHERE, 252.076f, 120)				// 角度
	
	Wait(40)
	VisualName("visual/mapname/mn_4301.itp",VN_NAMEMAP,-1,-1,VN_MAPNAME_TIME)//浸食谷

	// カメラ待ち
	WaitThread(1000)
	WaitThread(1001)
	WaitThread(1002)
	WaitThread(1003)

	Wait(30)

	CrossFade(FADE_NORMAL)
	

	ResetChrPos((CHRTYPE_MONS | RESET_POS))

	MoveCameraAt(0, -192.517f, -176.151f, 11.621f, 0)	// 注視点
	ChangeCameraDistance(0, 7.000f, 0)		// 基本距離
	ChangeCameraElevation(0, 4.840f, 0)	// 基本仰角
	RotateCamera(0, 330.000f, 0)				// 角度
	ChangeCameraPers(0, 60.000f, 0)			// 視野角
	SetCameraZPlane(0.100f, 300.000f)			// ZPlane
	RollCamera(0, 0.0f, 0)				// ロール回転
	// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

	SetShadowBound(1024.0f,1024.0f )
	SetShadowCamera(200, 1, 400)

	ExecuteCmd(1000, MoveCameraAt, INTERPOLATE_COS, -234.927f , -248.463f , 9.025f, 135)	// 注視点
	ExecuteCmd(1001, ChangeCameraDistance, INTERPOLATE_COS, 7.000f, 135)		// 基本距離
	ExecuteCmd(1002, ChangeCameraElevation, INTERPOLATE_COS, -0.722f, 135)	// 基本仰角
	ExecuteCmd(1003, RotateCamera, INTERPOLATE_COS, 327.324f, 135)				// 角度

	//MoveCameraAt( 0 , -234.927f , -248.463f , 9.025f , 0 )	// 注視点
	//ChangeCameraDistance( 0 , 7.000f , 0 )		// 基本距離
	//ChangeCameraElevation( 0 , -0.722f , 0 )	// 基本仰角
	//RotateCamera( 0 , 327.324f , 0 )				// 角度
	//ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
	//SetCameraZPlane( 0.100f , 300.000f )			// ZPlane
	//RollCamera( 0 , 0.0f , 0 )				// ロール回転
	// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。

	Wait(100)

	// カメラ待ち
	WaitThread(1000)
	WaitThread(1001)
	WaitThread(1002)
	WaitThread(1003)

	Wait(20)

	FadeOut(FADE_BLACK, FADE_NORMAL)
	WaitFade()

	StopThread(1000)
	StopThread(1001)
	StopThread(1002)
	StopThread(1003)

	Wait(5)

	MoveCameraAt( 0 , -222.506f , -217.606f , 10.017f , 0 )	// 注視点
	ChangeCameraDistance( 0 , 16.040f , 0 )		// 基本距離
	ChangeCameraElevation( 0 , 8.480f , 0 )	// 基本仰角
	RotateCamera( 0 , 145.254f , 0 )				// 角度
	ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
	SetCameraZPlane( 0.100f , 300.000f )			// ZPlane
	RollCamera( 0 , 0.0f , 0 )				// ロール回転
	// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。


	FadeIn(FADE_BLACK,FADE_NORMAL)
	WaitFade()
	Wait(10)

	ExecuteCmd(1000, MoveCameraAt, INTERPOLATE_SPHERE, -228.446f , -206.751f , 10.017f, 135)	// 注視点
	ExecuteCmd(1001, ChangeCameraDistance, INTERPOLATE_SPHERE, 8.440f, 135)		// 基本距離
	ExecuteCmd(1002, ChangeCameraElevation, INTERPOLATE_SPHERE, 4.452f , 135)	// 基本仰角
	ExecuteCmd(1003, RotateCamera, INTERPOLATE_SPHERE, 59.395f, 135)				// 角度

	//MoveCameraAt( 0 , -228.446f , -206.751f , 10.017f , 0 )	// 注視点
	//ChangeCameraDistance( 0 , 8.440f , 0 )		// 基本距離
	//ChangeCameraElevation( 0 , 4.452f , 0 )	// 基本仰角
	//RotateCamera( 0 , 59.395f , 0 )				// 角度
	//ChangeCameraPers( 0 , 60.000f , 0 )			// 視野角
	//SetCameraZPlane( 0.100f , 300.000f )			// ZPlane
	//RollCamera( 0 , 0.0f , 0 )				// ロール回転
	//// ResetCameraZPlane()	// イベント終了時に呼び出して下さい。マップ側の設定に戻します。


	// カメラ待ち
	WaitThread(1000)
	WaitThread(1001)
	WaitThread(1002)
	WaitThread(1003)
		
	Wait(20)

	FadeOut(FADE_BLACK, FADE_FAST)
	WaitFade()

	// チュートリアル =======================================================
	if ( !FLAG[SF_2NDSTART] ) {		// 2周目判定
	
		//自動送り禁止
		ResetStopFlag(STOPFLAG_AUTOMESSAGE)
		Wait(10)
		
		// 擬似フェードアウト表示
		Portrait_Anime(0 ,PR_ANIME_SCALE, 30.0f, 17.0f, 0, 0, 0)
		Portrait_Anime(0 ,PR_ANIME_COLOR, 1.0f, 1.0f, 1.0f, 1.0f, 0)
		
		FadeIn(FADE_BLACK, 0)
		WaitFade()

		// ポートレート表示
		PlaySE(SE_TUTORIAL, 100, 0, 0, 0, 1.0f, 0)		//チュートリアル
		Portrait_Anime(1, PR_ANIME_COLOR, 1.0f, 1.0f, 1.0f, 1.0f, FADE_NORMAL)
		Portrait_Anime(2, PR_ANIME_COLOR, 1.0f, 1.0f, 1.0f, 1.0f, FADE_NORMAL)
		Wait(FADE_NORMAL)
		Message2(1, TOPIC_BUTTUN_X, TOPIC_BUTTUN_Y, "", "", "", "", "", "", "", "", "", "")		//ボタン入力可能を提示
		WaitPrompt()

		Portrait_Anime(1, PR_ANIME_COLOR, 1.0f, 1.0f, 1.0f, 0.0f, FADE_FAST)
		Portrait_Anime(2, PR_ANIME_COLOR, 1.0f, 1.0f, 1.0f, 0.0f, FADE_FAST)
		Wait(FADE_FAST)

		FadeOut(FADE_BLACK, 0)
		WaitFade()
		
		// ポートレート閉じる
		Portrait_Close(0)
		Portrait_Close(1)
		Portrait_Close(2)

		//自動送り許可
		SetStopFlag(STOPFLAG_AUTOMESSAGE)
		
	}
	// =====================================================================


	//-- 終了処理 --------------------------------------------------------
	
	CallFunc("mp4301:SubEV_AreaName_4301_ED")
}

function "SubEV_AreaName_4301_ED"
{
	//終了処理はスキップ禁止
	SetSkipScript("")

	//イベント前のキャラ情報を復帰
	RestoreEventState()

	//隠したものを復帰。
//	ResetChrPos((CHRTYPE_MONS | RESET_POS | RESET_AISTATE))

	//キャラモーション初期化
	CallFunc("system:reset_chrmot_ALL")

	//パーティキャラを解放
	ReleaseEventPartyChr()

	//マップパラメーターリセット
	ResetMapParam(-1)

	Portrait_Close(  -1 )
	Portrait_Unload( -1 )

	ResetChrPos((CHRTYPE_MONS | RESET_POS))

	//フラグ
	SetFlag(TF_MAPNAME_SHOWN, 1)				// 地名表示した（テンポラリ）			
	SetFlag(GF_SUBEV_AREANAME_4301, 1)			// 【エリアカメラ演出：侵食谷】を見た
	SetFlag(GF_MPxxxx_MAP_NAME_NO_DRAW, 0)		// 地名表示制御解除
	SetFlag(GF_HELP_A49,1)		//閃光を放つ石

	CallFunc("mp4301:init")

	//イベント後の再配置位置
	SetChrPos("LEADER",-234.63f,-253.93f,5.28f)
	Turn("LEADER",-148.36f,360.0f)
	ResetPartyPos()
	ResetFollowPoint()

	//キャラ再配置と、モンスター初期位置に戻す、カメラもリセット
	MoveCameraAt(0, -241.956f, -266.349f, 5.627f, 0)	// 注視点
	ChangeCameraDistance(0, 7.000f, 0)		// 基本距離
	ChangeCameraElevation(0, 14.000f, 0)	// 基本仰角
	RotateCamera(0, -30.000f, 0)				// 角度
	ChangeCameraPers(0, 60.000f, 0)			// 視野角
	SetCameraZPlane(0.100f, 300.000f)			// ZPlane
	RollCamera(0, 0.0f, 0)				// ロール回転
	//カメラ位置復帰or初期位置設定
	CallFunc("system:camera_reset")
	ResetStopFlag(STOPFLAG_EVENT)

	FadeIn(FADE_BLACK, FADE_FAST)
	//WaitFade()
}



////////////////////////////////////////////////////////////////////////////////

//■サブイベントセクション

////////////////////////////////////////////////////////////////////////////////

//================================================
//【海賊のメモ①】（侵食谷・序盤）	※最初の暗闇エリアの手前に配置		GF_MP4301_SKELETON01
//================================================
function "SubEV_Memo_P_01"
{
	//	※海賊の死骸を調べて入手するようにする。
	//	※入手時に、海賊のメモのポートレートと
	//	　メモの内容を表示する。
	//	　メモの内容はその後冒険日誌の「ストーリー」「メモ」タブにに登録される。

//開始処理ここから----------------------------------------------------
	SetStopFlag(STOPFLAG_SIMPLEEVENT2)
	ResetStopFlag(STOPFLAG_NOCHARACLIP)
	SaveCamera()
	
	// ポートレート読み込み
	Portrait_Load(1, "visual/portrait/p_30013.itp")	// 海賊のメモ
	Portrait_Create(1, SUBP_POS_X, SUBP_POS_Y,
	0, 0, SUBP_SCALE_X, SUBP_SCALE_Y,
	0.0f, 0x00ffffff, 0x00000000)
	
	ResetMotion( "PARTYALL" , 0 )
	StopEffect(-1,PARTYALL,1)
	StopEmotion( "PARTYALL" )
	ResetMoveVec("PARTYALL")
//開始処理ここまで-----------------------------------------------

	TurnToChr( LEADER , this , 7.5f )
	Wait(10)

	ChangeAnimation( "PLAYER1" , "ANI_GET_ITEM", -1 , 1 )
	Wait(10)
	ChangeAnimation( "this" , "ANI_WAIT0", -1 , 1 )		//キラキラ消す

	//GetItemMessageExPlus( ICON3D_MEMO_P_001, 1 , ITEMMSG_SE_BETTER , "を手に入れた。" , 0 , 0 )
	//WaitPrompt()
	//WaitCloseWindow()
	//GetItem(ICON3D_MEMO_P_001,1)		//海賊のメモ①
	CallFunc("rng:0496")
	
	//ポートレート表示
	/*
	Portrait_Anime(1, PR_ANIME_COLOR, 1.0f, 1.0f, 1.0f, 1.0f, FADE_NORMAL)
	Wait(FADE_NORMAL)
	Wait(20)


	TalkPopup(UNDEF,0,3,SYSTEM_PPOSX,SYSTEM_PPOSY,0)
	{
		"#7Cあのクソどもを追ってここまで来たが……"
	}
	WaitPrompt()
	WaitCloseWindow()

	TalkPopup(UNDEF,0,3,SYSTEM_PPOSX,SYSTEM_PPOSY,0)
	{
		"#7C暗い、暗い、暗い……！"
	}
	WaitPrompt()
	WaitCloseWindow()

	TalkPopup(UNDEF,0,3,SYSTEM_PPOSX,SYSTEM_PPOSY,0)
	{
		"#7Cこの先は本当の地獄だ……！"
	}
	WaitPrompt()
	WaitCloseWindow()

	Wait(20)

	//ポートレートを消去
	Portrait_Anime(1, PR_ANIME_COLOR, 0.0f, 0.0f, 0.0f, 0.0f, FADE_FAST)
	Wait(FADE_FAST)

	Portrait_Close(1)
	Portrait_Unload(1)
	*/
	//SE埋め込み済み
	ChangeAnimation( "this" , "ANI_OPEN", -1 , 1 )		//崩れる

//終了処理ここから----------------------------------------------------
	CrossFade(FADE_CROSS)
	SetStopFlag(STOPFLAG_NOCHARACLIP)
	
	//フラグ処理
	SetFlag( GF_SUBEV_GET_MEMO, 1 )		//Ｔ・海賊のメモを手に入れた（１つでも手に入れたら立つ）
	//SetFlag( GF_SUBEV_GET_MEMO_P_01, 1 )		//海賊のメモ①を手に入れた

	//開けた
	SetFlag( GF_MP4301_SKELETON01, 1 )
	SetChrWork("this", CWK_CHECKOFF, 1)		// 普通のルックポイントをオフに
	
	//イベント後の再配置
	//SetChrPos("LEADER",0.00f,0.00f,0.00f)
	//Turn("LEADER",0.00f,360.0f)
	ResetPartyPos()
	ResetFollowPoint()
	
	RestoreCamera(0,0)
	ResetCameraObserver(0)
	ResetCameraZPlane()
	Wait(FADE_CROSS)
	
	ResetStopFlag(STOPFLAG_SIMPLEEVENT2)
//終了処理ここまで----------------------------------------------------
}
